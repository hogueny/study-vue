(this["webpackJsonp"] = this["webpackJsonp"] || []).push([[2],{

/***/ "./node_modules/@coreui/vue/dist/coreui-vue.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/@coreui/vue/dist/coreui-vue.esm.js ***!
  \*********************************************************/
/*! exports provided: default, Aside, AsideToggler, Breadcrumb, Callout, Footer, Header, HeaderDropdown, Sidebar, SidebarFooter, SidebarForm, SidebarHeader, SidebarMinimizer, SidebarNav, SidebarNavDivider, SidebarNavItem, SidebarNavDropdown, SidebarNavLabel, SidebarNavLink, SidebarNavTitle, SidebarToggler, Switch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Aside\", function() { return Aside; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"AsideToggler\", function() { return AsideToggler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Breadcrumb\", function() { return Breadcrumb; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Callout\", function() { return Callout; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Footer\", function() { return Footer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Header\", function() { return Header; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"HeaderDropdown\", function() { return HeaderDropdown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Sidebar\", function() { return Sidebar; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarFooter\", function() { return SidebarFooter; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarForm\", function() { return SidebarForm; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarHeader\", function() { return SidebarHeader; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarMinimizer\", function() { return SidebarMinimizer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNav\", function() { return SidebarNav; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavDivider\", function() { return SidebarNavDivider; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavItem\", function() { return SidebarNavItem; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavDropdown\", function() { return SidebarNavDropdown; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavLabel\", function() { return SidebarNavLabel; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavLink\", function() { return SidebarNavLink; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarNavTitle\", function() { return SidebarNavTitle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"SidebarToggler\", function() { return SidebarToggler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"Switch\", function() { return Switch; });\n/* harmony import */ var vue_clickaway__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-clickaway */ \"./node_modules/vue-clickaway/dist/vue-clickaway.common.js\");\n/* harmony import */ var vue_clickaway__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(vue_clickaway__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vue-perfect-scrollbar */ \"./node_modules/vue-perfect-scrollbar/dist/index.js\");\n/* harmony import */ var vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_1__);\n\n\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script = {\n  props: {\n    list: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    routeRecords: function routeRecords() {\n      return this.list.filter(function (route) {\n        return route.name || route.meta.label;\n      });\n    }\n  },\n  methods: {\n    getName: function getName(item) {\n      return item.meta && item.meta.label ? item.meta.label : item.name || null;\n    },\n    isLast: function isLast(index) {\n      return index === this.list.length - 1;\n    }\n  }\n};\n\n/* script */\nvar __vue_script__ = script;\n\n/* template */\nvar __vue_render__ = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"ol\", { staticClass: \"breadcrumb\" }, _vm._l(_vm.routeRecords, function (routeObject, index) {\n    return _c(\"li\", { key: index, staticClass: \"breadcrumb-item\" }, [_vm.isLast(index) ? _c(\"span\", { staticClass: \"active\" }, [_vm._v(_vm._s(_vm.getName(routeObject)))]) : _c(\"router-link\", { attrs: { to: routeObject } }, [_vm._v(_vm._s(_vm.getName(routeObject)))])], 1);\n  }));\n};\nvar __vue_staticRenderFns__ = [];\n__vue_render__._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__ = undefined;\n/* scoped */\nvar __vue_scope_id__ = undefined;\n/* module identifier */\nvar __vue_module_identifier__ = undefined;\n/* functional template */\nvar __vue_is_functional_template__ = false;\n/* component normalizer */\nfunction __vue_normalize__(template, style, script$$1, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script$$1 === 'function' ? script$$1.options : script$$1) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Breadcrumb\\\\Breadcrumb.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar Breadcrumb = __vue_normalize__({ render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ }, __vue_inject_styles__, __vue_script__, __vue_scope_id__, __vue_is_functional_template__, __vue_module_identifier__, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n\nvar script$1 = {\n  props: {\n    variant: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['callout', this.calloutVariant];\n    },\n    calloutVariant: function calloutVariant() {\n      return this.variant ? 'callout-' + this.variant : '';\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$1 = script$1;\n\n/* template */\nvar __vue_render__$1 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\", { class: _vm.classList }, [_vm._t(\"default\", [_vm._v(\"Callout\")])], 2);\n};\nvar __vue_staticRenderFns__$1 = [];\n__vue_render__$1._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$1 = undefined;\n/* scoped */\nvar __vue_scope_id__$1 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$1 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$1 = false;\n/* component normalizer */\nfunction __vue_normalize__$1(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Callout\\\\Callout.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar Callout = __vue_normalize__$1({ render: __vue_render__$1, staticRenderFns: __vue_staticRenderFns__$1 }, __vue_inject_styles__$1, __vue_script__$1, __vue_scope_id__$1, __vue_is_functional_template__$1, __vue_module_identifier__$1, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n\nvar script$2 = {\n  name: 'AppFooter',\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['app-footer'];\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed();\n  },\n  methods: {\n    isFixed: function isFixed() {\n      this.fixed ? document.body.classList.add('footer-fixed') : document.body.classList.remove('footer-fixed');\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$2 = script$2;\n\n/* template */\nvar __vue_render__$2 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"footer\", { class: _vm.classList }, [_vm._t(\"default\", [_vm._v(\"Footer\")])], 2);\n};\nvar __vue_staticRenderFns__$2 = [];\n__vue_render__$2._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$2 = undefined;\n/* scoped */\nvar __vue_scope_id__$2 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$2 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$2 = false;\n/* component normalizer */\nfunction __vue_normalize__$2(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Footer\\\\Footer.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar Footer = __vue_normalize__$2({ render: __vue_render__$2, staticRenderFns: __vue_staticRenderFns__$2 }, __vue_inject_styles__$2, __vue_script__$2, __vue_scope_id__$2, __vue_is_functional_template__$2, __vue_module_identifier__$2, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$3 = {\n  model: {\n    prop: 'modelChecked',\n    event: 'change'\n  },\n  props: {\n    id: {\n      type: String,\n      default: function _default() {\n        return 'switch-id-' + this._uid;\n      }\n    },\n    color: {\n      type: String,\n      default: 'secondary'\n    },\n    label: {\n      type: Boolean,\n      default: null\n    },\n    outline: {\n      type: [Boolean, String],\n      default: null,\n      validator: function validator(value) {\n        return [false, true, '', 'alt'].indexOf(value) !== -1;\n      }\n    },\n    size: {\n      type: String,\n      default: null,\n      validator: function validator(value) {\n        return ['', 'lg', 'sm'].indexOf(value) !== -1;\n      }\n    },\n    checked: {\n      type: Boolean,\n      default: false\n    },\n    defaultChecked: {\n      type: Boolean,\n      default: false\n    },\n    modelChecked: {\n      default: undefined\n    },\n    value: {\n      default: true\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String,\n      default: null\n    },\n    required: {\n      type: Boolean,\n      default: false\n    },\n    onChange: {\n      type: Function\n    },\n    uncheckedValue: {\n      default: false\n    },\n    variant: {\n      type: String,\n      default: null,\n      validator: function validator(value) {\n        return [null, '3d', 'pill'].indexOf(value) !== -1;\n      }\n    },\n    dataOn: {\n      type: String,\n      default: 'On'\n    },\n    dataOff: {\n      type: String,\n      default: 'Off'\n    }\n  },\n  data: function data() {\n    return {\n      checkedData: this.isChecked ? this.value : this.uncheckedValue\n    };\n  },\n  computed: {\n    classList: function classList() {\n      return ['switch', this.label ? 'switch-label' : '', this.size ? 'switch-' + this.size : '', this.variant ? 'switch-' + this.variant : '', 'switch' + (this.outline ? '-outline' : '') + '-' + this.color + (this.outline === 'alt' ? '-alt' : ''), 'form-check-label'];\n    },\n    isChecked: function isChecked() {\n      if (this.modelChecked === undefined) {\n        return this.checkedData === this.value;\n      }\n      return this.modelChecked === this.value;\n    }\n  },\n  mounted: function mounted() {\n    this.toggle(this.defaultChecked || this.checked || this.isChecked);\n  },\n\n  methods: {\n    handleChange: function handleChange(event) {\n      this.toggle(event.target.checked);\n    },\n    toggle: function toggle(checked) {\n      this.checkedData = checked ? this.value : this.uncheckedValue;\n      this.$emit('change', this.checkedData);\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$3 = script$3;\n\n/* template */\nvar __vue_render__$3 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"label\", { class: _vm.classList }, [_c(\"input\", {\n    staticClass: \"switch-input form-check-input\",\n    attrs: {\n      id: _vm.id,\n      disabled: _vm.disabled,\n      required: _vm.required,\n      name: _vm.name,\n      type: \"checkbox\",\n      \"true-value\": \"value\",\n      \"false-value\": \"uncheckedValue\"\n    },\n    domProps: { checked: _vm.isChecked, value: _vm.value },\n    on: { change: _vm.handleChange }\n  }), _vm._v(\" \"), _vm.label ? [_c(\"span\", {\n    staticClass: \"switch-slider\",\n    attrs: {\n      \"data-checked\": _vm.dataOn,\n      \"data-unchecked\": _vm.dataOff\n    }\n  })] : [_c(\"span\", { staticClass: \"switch-slider\" })]], 2);\n};\nvar __vue_staticRenderFns__$3 = [];\n__vue_render__$3._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$3 = undefined;\n/* scoped */\nvar __vue_scope_id__$3 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$3 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$3 = false;\n/* component normalizer */\nfunction __vue_normalize__$3(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Switch\\\\Switch.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar Switch = __vue_normalize__$3({ render: __vue_render__$3, staticRenderFns: __vue_staticRenderFns__$3 }, __vue_inject_styles__$3, __vue_script__$3, __vue_scope_id__$3, __vue_is_functional_template__$3, __vue_module_identifier__$3, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n\nvar script$4 = {\n  name: 'AppAside',\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    display: {\n      type: String,\n      default: ''\n    },\n    offCanvas: {\n      type: Boolean,\n      default: true\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed(this.fixed);\n    this.isOffCanvas(this.offCanvas);\n  },\n  methods: {\n    isFixed: function isFixed(fixed) {\n      fixed ? document.body.classList.add('aside-menu-fixed') : document.body.classList.remove('aside-menu-fixed');\n      return fixed;\n    },\n    isOffCanvas: function isOffCanvas(offCanvas) {\n      offCanvas ? document.body.classList.add('aside-menu-off-canvas') : document.body.classList.remove('aside-menu-off-canvas');\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$4 = script$4;\n\n/* template */\nvar __vue_render__$4 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"aside\", { staticClass: \"aside-menu\" }, [_vm._t(\"default\", [_vm._v(\"Aside\")])], 2);\n};\nvar __vue_staticRenderFns__$4 = [];\n__vue_render__$4._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$4 = undefined;\n/* scoped */\nvar __vue_scope_id__$4 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$4 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$4 = false;\n/* component normalizer */\nfunction __vue_normalize__$4(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Aside\\\\Aside.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar Aside = __vue_normalize__$4({ render: __vue_render__$4, staticRenderFns: __vue_staticRenderFns__$4 }, __vue_inject_styles__$4, __vue_script__$4, __vue_scope_id__$4, __vue_is_functional_template__$4, __vue_module_identifier__$4, undefined, undefined);\n\nvar sidebarCssClasses = ['sidebar-show', 'sidebar-sm-show', 'sidebar-md-show', 'sidebar-lg-show', 'sidebar-xl-show'];\n\nvar asideMenuCssClasses = ['aside-menu-show', 'aside-menu-sm-show', 'aside-menu-md-show', 'aside-menu-lg-show', 'aside-menu-xl-show'];\n\nvar validBreakpoints = ['sm', 'md', 'lg', 'xl'];\n\nfunction checkBreakpoint(breakpoint, list) {\n  return list.indexOf(breakpoint) > -1;\n}\n\nfunction toggleClasses(toggleClass, classList, force) {\n  var level = classList.indexOf(toggleClass);\n  var removeClassList = classList.slice(0, level);\n  removeClassList.map(function (className) {\n    return document.body.classList.remove(className);\n  });\n  document.body.classList.toggle(toggleClass, force);\n}\n\n//\n\nvar script$5 = {\n  name: 'AsideToggler',\n  props: {\n    defaultOpen: {\n      type: Boolean,\n      default: false\n    },\n    display: {\n      type: String,\n      default: 'lg'\n    },\n    mobile: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['navbar-toggler'];\n    }\n  },\n  mounted: function mounted() {\n    this.toggle(this.defaultOpen);\n  },\n  methods: {\n    toggle: function toggle(force) {\n      var _ref = [this.display, this.mobile],\n          display = _ref[0],\n          mobile = _ref[1];\n\n      var cssClass = asideMenuCssClasses[0];\n      if (!mobile && display && checkBreakpoint(display, validBreakpoints)) {\n        cssClass = 'aside-menu-' + display + '-show';\n      }\n      toggleClasses(cssClass, asideMenuCssClasses, force);\n    },\n    asideToggle: function asideToggle(e) {\n      e.preventDefault();\n      this.toggle();\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$5 = script$5;\n\n/* template */\nvar __vue_render__$5 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"button\", {\n    class: _vm.classList,\n    attrs: { display: _vm.display, mobile: _vm.mobile, type: \"button\" },\n    on: { click: _vm.asideToggle }\n  }, [_c(\"span\", { staticClass: \"navbar-toggler-icon\" })]);\n};\nvar __vue_staticRenderFns__$5 = [];\n__vue_render__$5._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$5 = undefined;\n/* scoped */\nvar __vue_scope_id__$5 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$5 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$5 = false;\n/* component normalizer */\nfunction __vue_normalize__$5(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Aside\\\\AsideToggler.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar AsideToggler = __vue_normalize__$5({ render: __vue_render__$5, staticRenderFns: __vue_staticRenderFns__$5 }, __vue_inject_styles__$5, __vue_script__$5, __vue_scope_id__$5, __vue_is_functional_template__$5, __vue_module_identifier__$5, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n//\n\nvar script$6 = {\n  name: 'AppHeader',\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['app-header', 'navbar'];\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed(this.fixed);\n  },\n  methods: {\n    isFixed: function isFixed(fixed) {\n      fixed ? document.body.classList.add('header-fixed') : document.body.classList.remove('header-fixed');\n      return fixed;\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$6 = script$6;\n\n/* template */\nvar __vue_render__$6 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"header\", { class: _vm.classList }, [_vm._t(\"default\", [_vm._v(\"Header\")])], 2);\n};\nvar __vue_staticRenderFns__$6 = [];\n__vue_render__$6._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$6 = undefined;\n/* scoped */\nvar __vue_scope_id__$6 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$6 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$6 = false;\n/* component normalizer */\nfunction __vue_normalize__$6(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Header\\\\Header.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar Header = __vue_normalize__$6({ render: __vue_render__$6, staticRenderFns: __vue_staticRenderFns__$6 }, __vue_inject_styles__$6, __vue_script__$6, __vue_scope_id__$6, __vue_is_functional_template__$6, __vue_module_identifier__$6, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$7 = {\n  name: 'HeaderDropdown',\n  props: {\n    right: {\n      type: Boolean,\n      default: false\n    },\n    noCaret: {\n      type: Boolean,\n      default: false\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$7 = script$7;\n\n/* template */\nvar __vue_render__$7 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"b-nav-item-dropdown\", { attrs: { right: _vm.right, \"no-caret\": _vm.noCaret } }, [_c(\"template\", { slot: \"button-content\" }, [_vm._t(\"header\", [_vm._v(\"\\n      ❔\\n    \")])], 2), _vm._v(\" \"), _vm._t(\"dropdown\", [_c(\"div\", { style: { right: \"auto\", height: \"200px\" } }, [_c(\"span\", { staticClass: \"text-center\" }, [_vm._v(\"dropdown\")])])])], 2);\n};\nvar __vue_staticRenderFns__$7 = [];\n__vue_render__$7._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$7 = undefined;\n/* scoped */\nvar __vue_scope_id__$7 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$7 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$7 = false;\n/* component normalizer */\nfunction __vue_normalize__$7(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Header\\\\HeaderDropdown.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar HeaderDropdown = __vue_normalize__$7({ render: __vue_render__$7, staticRenderFns: __vue_staticRenderFns__$7 }, __vue_inject_styles__$7, __vue_script__$7, __vue_scope_id__$7, __vue_is_functional_template__$7, __vue_module_identifier__$7, undefined, undefined);\n\nvar hideMobile = {\n  methods: {\n    hideMobile: function hideMobile() {\n      if (document.body.classList.contains('sidebar-show')) {\n        document.body.classList.toggle('sidebar-show');\n      }\n    }\n  }\n};\n\n//\n\nvar script$8 = {\n  name: 'sidebar',\n  mixins: [vue_clickaway__WEBPACK_IMPORTED_MODULE_0__[\"mixin\"], hideMobile],\n  props: {\n    fixed: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted: function mounted() {\n    this.isFixed();\n  },\n  methods: {\n    isFixed: function isFixed() {\n      this.fixed ? document.body.classList.add('sidebar-fixed') : document.body.classList.remove('sidebar-fixed');\n      return this.fixed;\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$8 = script$8;\n\n/* template */\nvar __vue_render__$8 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"div\", {\n    directives: [{\n      name: \"on-clickaway\",\n      rawName: \"v-on-clickaway\",\n      value: _vm.hideMobile,\n      expression: \"hideMobile\"\n    }],\n    staticClass: \"sidebar\"\n  }, [_vm._t(\"default\", [_vm._v(\"Sidebar\")])], 2);\n};\nvar __vue_staticRenderFns__$8 = [];\n__vue_render__$8._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$8 = undefined;\n/* scoped */\nvar __vue_scope_id__$8 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$8 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$8 = false;\n/* component normalizer */\nfunction __vue_normalize__$8(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\Sidebar.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar Sidebar = __vue_normalize__$8({ render: __vue_render__$8, staticRenderFns: __vue_staticRenderFns__$8 }, __vue_inject_styles__$8, __vue_script__$8, __vue_scope_id__$8, __vue_is_functional_template__$8, __vue_module_identifier__$8, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n\nvar script$9 = {\n  name: 'sidebar-footer',\n  computed: {\n    hasSlotDefault: function hasSlotDefault() {\n      return !!this.$slots.default;\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$9 = script$9;\n\n/* template */\nvar __vue_render__$9 = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _vm.hasSlotDefault ? _c(\"div\", { staticClass: \"sidebar-footer\" }, [_vm._t(\"default\")], 2) : _vm._e();\n};\nvar __vue_staticRenderFns__$9 = [];\n__vue_render__$9._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$9 = undefined;\n/* scoped */\nvar __vue_scope_id__$9 = undefined;\n/* module identifier */\nvar __vue_module_identifier__$9 = undefined;\n/* functional template */\nvar __vue_is_functional_template__$9 = false;\n/* component normalizer */\nfunction __vue_normalize__$9(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarFooter.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarFooter = __vue_normalize__$9({ render: __vue_render__$9, staticRenderFns: __vue_staticRenderFns__$9 }, __vue_inject_styles__$9, __vue_script__$9, __vue_scope_id__$9, __vue_is_functional_template__$9, __vue_module_identifier__$9, undefined, undefined);\n\n//\n//\n//\n//\n//\n\n\nvar script$a = {\n  name: 'sidebar-form',\n  computed: {\n    hasSlotDefault: function hasSlotDefault() {\n      return !!this.$slots.default;\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$a = script$a;\n\n/* template */\nvar __vue_render__$a = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _vm.hasSlotDefault ? _c(\"div\", { staticClass: \"sidebar-form\" }, [_vm._t(\"default\")], 2) : _vm._e();\n};\nvar __vue_staticRenderFns__$a = [];\n__vue_render__$a._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$a = undefined;\n/* scoped */\nvar __vue_scope_id__$a = undefined;\n/* module identifier */\nvar __vue_module_identifier__$a = undefined;\n/* functional template */\nvar __vue_is_functional_template__$a = false;\n/* component normalizer */\nfunction __vue_normalize__$a(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarForm.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarForm = __vue_normalize__$a({ render: __vue_render__$a, staticRenderFns: __vue_staticRenderFns__$a }, __vue_inject_styles__$a, __vue_script__$a, __vue_scope_id__$a, __vue_is_functional_template__$a, __vue_module_identifier__$a, undefined, undefined);\n\n//\n//\n//\n//\n//\n\n\nvar script$b = {\n  name: 'sidebar-header',\n  computed: {\n    hasSlotDefault: function hasSlotDefault() {\n      return !!this.$slots.default;\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$b = script$b;\n\n/* template */\nvar __vue_render__$b = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _vm.hasSlotDefault ? _c(\"div\", { staticClass: \"sidebar-header\" }, [_vm._t(\"default\")], 2) : _vm._e();\n};\nvar __vue_staticRenderFns__$b = [];\n__vue_render__$b._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$b = undefined;\n/* scoped */\nvar __vue_scope_id__$b = undefined;\n/* module identifier */\nvar __vue_module_identifier__$b = undefined;\n/* functional template */\nvar __vue_is_functional_template__$b = false;\n/* component normalizer */\nfunction __vue_normalize__$b(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarHeader.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarHeader = __vue_normalize__$b({ render: __vue_render__$b, staticRenderFns: __vue_staticRenderFns__$b }, __vue_inject_styles__$b, __vue_script__$b, __vue_scope_id__$b, __vue_is_functional_template__$b, __vue_module_identifier__$b, undefined, undefined);\n\nvar togglePs = {\n  methods: {\n    togglePs: function togglePs(toggle) {\n      var sidebar = document.querySelector('.sidebar-nav section');\n      if (sidebar) {\n        // sidebar.classList.toggle('ps', toggle);\n        // sidebar.classList.toggle('ps-container', toggle);\n        // sidebar.classList.toggle('ps--active-y', toggle);\n        if (toggle) {\n          sidebar.classList.add('ps', 'ps-container', 'ps--active-y');\n        } else {\n          sidebar.classList.remove('ps', 'ps-container', 'ps--active-y');\n        }\n      }\n    }\n  }\n};\n\n//\n\nvar script$c = {\n  name: 'sidebar-minimizer',\n  mixins: [togglePs],\n  mounted: function mounted() {\n    var isMinimized = document.body.classList.contains('sidebar-minimized');\n    this.togglePs(!isMinimized);\n  },\n  methods: {\n    onClick: function onClick() {\n      this.sidebarMinimize();\n      this.brandMinimize();\n    },\n    sidebarMinimize: function sidebarMinimize() {\n      var isMinimized = document.body.classList.toggle('sidebar-minimized');\n      this.$emit('cui-sidebar-minimize', isMinimized);\n      this.togglePs(!isMinimized);\n    },\n    brandMinimize: function brandMinimize() {\n      document.body.classList.toggle('brand-minimized');\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$c = script$c;\n\n/* template */\nvar __vue_render__$c = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"button\", {\n    staticClass: \"sidebar-minimizer\",\n    attrs: { type: \"button\" },\n    on: {\n      click: function click($event) {\n        _vm.onClick();\n      }\n    }\n  });\n};\nvar __vue_staticRenderFns__$c = [];\n__vue_render__$c._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$c = undefined;\n/* scoped */\nvar __vue_scope_id__$c = undefined;\n/* module identifier */\nvar __vue_module_identifier__$c = undefined;\n/* functional template */\nvar __vue_is_functional_template__$c = false;\n/* component normalizer */\nfunction __vue_normalize__$c(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarMinimizer.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarMinimizer = __vue_normalize__$c({ render: __vue_render__$c, staticRenderFns: __vue_staticRenderFns__$c }, __vue_inject_styles__$c, __vue_script__$c, __vue_scope_id__$c, __vue_is_functional_template__$c, __vue_module_identifier__$c, undefined, undefined);\n\nfunction unwrapExports (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;\n}\n\nfunction createCommonjsModule(fn, module) {\n\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n}\n\nvar _core = createCommonjsModule(function (module) {\nvar core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n});\nvar _core_1 = _core.version;\n\nvar $JSON = _core.JSON || (_core.JSON = { stringify: JSON.stringify });\nvar stringify = function stringify(it) { // eslint-disable-line no-unused-vars\n  return $JSON.stringify.apply($JSON, arguments);\n};\n\nvar stringify$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": stringify, __esModule: true };\n});\n\nunwrapExports(stringify$1);\n\nvar _global = createCommonjsModule(function (module) {\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n});\n\nvar _aFunction = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n// optional / simple context binding\n\nvar _ctx = function (fn, that, length) {\n  _aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar _isObject = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n\nvar _anObject = function (it) {\n  if (!_isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\nvar _fails = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n// Thank's IE8 for his funny defineProperty\nvar _descriptors = !_fails(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n\nvar document$1 = _global.document;\n// typeof document.createElement is 'object' in old IE\nvar is = _isObject(document$1) && _isObject(document$1.createElement);\nvar _domCreate = function (it) {\n  return is ? document$1.createElement(it) : {};\n};\n\nvar _ie8DomDefine = !_descriptors && !_fails(function () {\n  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n\n// 7.1.1 ToPrimitive(input [, PreferredType])\n\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nvar _toPrimitive = function (it, S) {\n  if (!_isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\nvar dP = Object.defineProperty;\n\nvar f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  _anObject(O);\n  P = _toPrimitive(P, true);\n  _anObject(Attributes);\n  if (_ie8DomDefine) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar _objectDp = {\n\tf: f\n};\n\nvar _propertyDesc = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar _hide = _descriptors ? function (object, key, value) {\n  return _objectDp.f(object, key, _propertyDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar hasOwnProperty = {}.hasOwnProperty;\nvar _has = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var IS_WRAP = type & $export.W;\n  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});\n  var expProto = exports[PROTOTYPE];\n  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];\n  var key, own, out;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    if (own && _has(exports, key)) continue;\n    // export native or passed\n    out = own ? target[key] : source[key];\n    // prevent global pollution for namespaces\n    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n    // bind timers to global for call from export context\n    : IS_BIND && own ? _ctx(out, _global)\n    // wrap global constructors for prevent change them in library\n    : IS_WRAP && target[key] == out ? (function (C) {\n      var F = function (a, b, c) {\n        if (this instanceof C) {\n          switch (arguments.length) {\n            case 0: return new C();\n            case 1: return new C(a);\n            case 2: return new C(a, b);\n          } return new C(a, b, c);\n        } return C.apply(this, arguments);\n      };\n      F[PROTOTYPE] = C[PROTOTYPE];\n      return F;\n    // make static versions for prototype methods\n    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;\n    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%\n    if (IS_PROTO) {\n      (exports.virtual || (exports.virtual = {}))[key] = out;\n      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%\n      if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);\n    }\n  }\n};\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nvar _export = $export;\n\nvar toString = {}.toString;\n\nvar _cof = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\n// eslint-disable-next-line no-prototype-builtins\nvar _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return _cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n// 7.2.1 RequireObjectCoercible(argument)\nvar _defined = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n// to indexed object, toObject with fallback for non-array-like ES3 strings\n\n\nvar _toIobject = function (it) {\n  return _iobject(_defined(it));\n};\n\n// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nvar _toInteger = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n// 7.1.15 ToLength\n\nvar min = Math.min;\nvar _toLength = function (it) {\n  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n\nvar max = Math.max;\nvar min$1 = Math.min;\nvar _toAbsoluteIndex = function (index, length) {\n  index = _toInteger(index);\n  return index < 0 ? max(index + length, 0) : min$1(index, length);\n};\n\n// false -> Array#indexOf\n// true  -> Array#includes\n\n\n\nvar _arrayIncludes = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = _toIobject($this);\n    var length = _toLength(O.length);\n    var index = _toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar _library = true;\n\nvar _shared = createCommonjsModule(function (module) {\nvar SHARED = '__core-js_shared__';\nvar store = _global[SHARED] || (_global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: _core.version,\n  mode: _library ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n});\n\nvar id = 0;\nvar px = Math.random();\nvar _uid = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\nvar shared = _shared('keys');\n\nvar _sharedKey = function (key) {\n  return shared[key] || (shared[key] = _uid(key));\n};\n\nvar arrayIndexOf = _arrayIncludes(false);\nvar IE_PROTO = _sharedKey('IE_PROTO');\n\nvar _objectKeysInternal = function (object, names) {\n  var O = _toIobject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (_has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n\n// IE 8- don't enum bug keys\nvar _enumBugKeys = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n\n// 19.1.2.14 / 15.2.3.14 Object.keys(O)\n\n\n\nvar _objectKeys = Object.keys || function keys(O) {\n  return _objectKeysInternal(O, _enumBugKeys);\n};\n\nvar f$1 = Object.getOwnPropertySymbols;\n\nvar _objectGops = {\n\tf: f$1\n};\n\nvar f$2 = {}.propertyIsEnumerable;\n\nvar _objectPie = {\n\tf: f$2\n};\n\n// 7.1.13 ToObject(argument)\n\nvar _toObject = function (it) {\n  return Object(_defined(it));\n};\n\n// 19.1.2.1 Object.assign(target, source, ...)\n\n\n\n\n\nvar $assign = Object.assign;\n\n// should work with symbols and should have deterministic property order (V8 bug)\nvar _objectAssign = !$assign || _fails(function () {\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line no-undef\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) { B[k] = k; });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars\n  var T = _toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = _objectGops.f;\n  var isEnum = _objectPie.f;\n  while (aLen > index) {\n    var S = _iobject(arguments[index++]);\n    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n  } return T;\n} : $assign;\n\n// 19.1.3.1 Object.assign(target, source)\n\n\n_export(_export.S + _export.F, 'Object', { assign: _objectAssign });\n\nvar assign = _core.Object.assign;\n\nvar assign$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": assign, __esModule: true };\n});\n\nunwrapExports(assign$1);\n\nvar _extends = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\n\n\nvar _assign2 = _interopRequireDefault(assign$1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _assign2.default || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n});\n\nvar _extends$1 = unwrapExports(_extends);\n\n// most Object methods by ES6 should accept primitives\n\n\n\nvar _objectSap = function (KEY, exec) {\n  var fn = (_core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  _export(_export.S + _export.F * _fails(function () { fn(1); }), 'Object', exp);\n};\n\n// 19.1.2.14 Object.keys(O)\n\n\n\n_objectSap('keys', function () {\n  return function keys(it) {\n    return _objectKeys(_toObject(it));\n  };\n});\n\nvar keys = _core.Object.keys;\n\nvar keys$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": keys, __esModule: true };\n});\n\nvar _Object$keys = unwrapExports(keys$1);\n\n// true  -> String#at\n// false -> String#codePointAt\nvar _stringAt = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(_defined(that));\n    var i = _toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n      ? TO_STRING ? s.charAt(i) : a\n      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\nvar _redefine = _hide;\n\nvar _iterators = {};\n\nvar _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {\n  _anObject(O);\n  var keys = _objectKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n\nvar document$2 = _global.document;\nvar _html = document$2 && document$2.documentElement;\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n\n\n\nvar IE_PROTO$1 = _sharedKey('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE$1 = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = _domCreate('iframe');\n  var i = _enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  _html.appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];\n  return createDict();\n};\n\nvar _objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE$1] = _anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : _objectDps(result, Properties);\n};\n\nvar _wks = createCommonjsModule(function (module) {\nvar store = _shared('wks');\n\nvar Symbol = _global.Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n});\n\nvar def = _objectDp.f;\n\nvar TAG = _wks('toStringTag');\n\nvar _setToStringTag = function (it, tag, stat) {\n  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n_hide(IteratorPrototype, _wks('iterator'), function () { return this; });\n\nvar _iterCreate = function (Constructor, NAME, next) {\n  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });\n  _setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\n\n\nvar IE_PROTO$2 = _sharedKey('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nvar _objectGpo = Object.getPrototypeOf || function (O) {\n  O = _toObject(O);\n  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n\nvar ITERATOR = _wks('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nvar _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  _iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = _objectGpo($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      _setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!_library && typeof IteratorPrototype[ITERATOR] != 'function') _hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!_library || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    _hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  _iterators[NAME] = $default;\n  _iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) _redefine(proto, key, methods[key]);\n    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\nvar $at = _stringAt(true);\n\n// 21.1.3.27 String.prototype[@@iterator]()\n_iterDefine(String, 'String', function (iterated) {\n  this._t = String(iterated); // target\n  this._i = 0;                // next index\n// 21.1.5.2.1 %StringIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return { value: undefined, done: true };\n  point = $at(O, index);\n  this._i += point.length;\n  return { value: point, done: false };\n});\n\n// call something on iterator step with safe closing on error\n\nvar _iterCall = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(_anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) _anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n// check on default Array iterator\n\nvar ITERATOR$1 = _wks('iterator');\nvar ArrayProto = Array.prototype;\n\nvar _isArrayIter = function (it) {\n  return it !== undefined && (_iterators.Array === it || ArrayProto[ITERATOR$1] === it);\n};\n\nvar _createProperty = function (object, index, value) {\n  if (index in object) _objectDp.f(object, index, _propertyDesc(0, value));\n  else object[index] = value;\n};\n\n// getting tag from 19.1.3.6 Object.prototype.toString()\n\nvar TAG$1 = _wks('toStringTag');\n// ES3 wrong here\nvar ARG = _cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nvar _classof = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG$1)) == 'string' ? T\n    // builtinTag case\n    : ARG ? _cof(O)\n    // ES3 arguments fallback\n    : (B = _cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\nvar ITERATOR$2 = _wks('iterator');\n\nvar core_getIteratorMethod = _core.getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR$2]\n    || it['@@iterator']\n    || _iterators[_classof(it)];\n};\n\nvar ITERATOR$3 = _wks('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR$3]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n} catch (e) { /* empty */ }\n\nvar _iterDetect = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR$3]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR$3] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n\n_export(_export.S + _export.F * !_iterDetect(function (iter) { }), 'Array', {\n  // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)\n  from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = _toObject(arrayLike);\n    var C = typeof this == 'function' ? this : Array;\n    var aLen = arguments.length;\n    var mapfn = aLen > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    var index = 0;\n    var iterFn = core_getIteratorMethod(O);\n    var length, result, step, iterator;\n    if (mapping) mapfn = _ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);\n    // if object isn't iterable or it's array with default iterator - use simple case\n    if (iterFn != undefined && !(C == Array && _isArrayIter(iterFn))) {\n      for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {\n        _createProperty(result, index, mapping ? _iterCall(iterator, mapfn, [step.value, index], true) : step.value);\n      }\n    } else {\n      length = _toLength(O.length);\n      for (result = new C(length); length > index; index++) {\n        _createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);\n      }\n    }\n    result.length = index;\n    return result;\n  }\n});\n\nvar from_1 = _core.Array.from;\n\nvar from_1$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": from_1, __esModule: true };\n});\n\nunwrapExports(from_1$1);\n\nvar toConsumableArray = createCommonjsModule(function (module, exports) {\n\nexports.__esModule = true;\n\n\n\nvar _from2 = _interopRequireDefault(from_1$1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return (0, _from2.default)(arr);\n  }\n};\n});\n\nvar _toConsumableArray = unwrapExports(toConsumableArray);\n\n//\n//\n//\n//\n\nvar script$d = {\n  name: 'SidebarNavDivider',\n  props: {\n    classes: {\n      type: [String, Array, Object],\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['nav-divider'].concat(_toConsumableArray(this.itemClasses));\n    },\n    itemClasses: function itemClasses() {\n      var classes = this.classes;\n      return !classes ? [] : typeof classes === 'string' || classes instanceof String ? classes.split(' ') : Array.isArray(classes) ? classes : _Object$keys(classes).filter(function (i) {\n        return classes[i];\n      });\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$d = script$d;\n\n/* template */\nvar __vue_render__$d = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"li\", { class: _vm.classList });\n};\nvar __vue_staticRenderFns__$d = [];\n__vue_render__$d._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$d = undefined;\n/* scoped */\nvar __vue_scope_id__$d = undefined;\n/* module identifier */\nvar __vue_module_identifier__$d = undefined;\n/* functional template */\nvar __vue_is_functional_template__$d = false;\n/* component normalizer */\nfunction __vue_normalize__$d(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavDivider.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarNavDivider = __vue_normalize__$d({ render: __vue_render__$d, staticRenderFns: __vue_staticRenderFns__$d }, __vue_inject_styles__$d, __vue_script__$d, __vue_scope_id__$d, __vue_is_functional_template__$d, __vue_module_identifier__$d, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$e = {\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: ''\n    }\n  },\n  computed: {\n    classIcon: function classIcon() {\n      return ['nav-icon', this.icon];\n    }\n  },\n  methods: {\n    handleClick: function handleClick(e) {\n      e.preventDefault();\n      e.target.parentElement.classList.toggle('open');\n    }\n  }\n};\n\nvar __vue_script__$e = script$e;\n\n/* template */\nvar __vue_render__$e = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"router-link\", {\n    staticClass: \"nav-item nav-dropdown\",\n    attrs: { tag: \"li\", to: _vm.url, disabled: \"\" }\n  }, [_c(\"div\", {\n    staticClass: \"nav-link nav-dropdown-toggle\",\n    on: { click: _vm.handleClick }\n  }, [_c(\"i\", { class: _vm.classIcon }), _vm._v(\" \" + _vm._s(_vm.name))]), _vm._v(\" \"), _c(\"ul\", { staticClass: \"nav-dropdown-items\" }, [_vm._t(\"default\")], 2)]);\n};\nvar __vue_staticRenderFns__$e = [];\n__vue_render__$e._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$e = function __vue_inject_styles__(inject) {\n  if (!inject) return;\n  inject(\"data-v-6c5c85a4_0\", { source: \"\\n.nav-link[data-v-6c5c85a4] {\\n  cursor:pointer;\\n}\\n\", map: { \"version\": 3, \"sources\": [\"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon/D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavDropdown.vue\"], \"names\": [], \"mappings\": \";AA2CA;EACA,eAAA;CACA\", \"file\": \"SidebarNavDropdown.vue\", \"sourcesContent\": [\"<template>\\n  <router-link tag=\\\"li\\\" class=\\\"nav-item nav-dropdown\\\" :to=\\\"url\\\" disabled>\\n    <div class=\\\"nav-link nav-dropdown-toggle\\\" @click=\\\"handleClick\\\"><i :class=\\\"classIcon\\\"></i> {{name}}</div>\\n    <ul class=\\\"nav-dropdown-items\\\">\\n      <slot></slot>\\n    </ul>\\n  </router-link>\\n</template>\\n\\n<script>\\nexport default {\\n  props: {\\n    name: {\\n      type: String,\\n      default: ''\\n    },\\n    url: {\\n      type: String,\\n      default: ''\\n    },\\n    icon: {\\n      type: String,\\n      default: ''\\n    }\\n  },\\n  computed: {\\n    classIcon () {\\n      return [\\n        'nav-icon',\\n        this.icon\\n      ]\\n    }\\n  },\\n  methods: {\\n    handleClick (e) {\\n      e.preventDefault()\\n      e.target.parentElement.classList.toggle('open')\\n    }\\n  }\\n}\\n</script>\\n\\n<style scoped lang=\\\"css\\\">\\n  .nav-link {\\n    cursor:pointer;\\n  }\\n</style>\\n\"] }, media: undefined });\n};\n/* scoped */\nvar __vue_scope_id__$e = \"data-v-6c5c85a4\";\n/* module identifier */\nvar __vue_module_identifier__$e = undefined;\n/* functional template */\nvar __vue_is_functional_template__$e = false;\n/* component normalizer */\nfunction __vue_normalize__$e(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavDropdown.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  {\n    var hook = void 0;\n    if (style) {\n      hook = function hook(context) {\n        style.call(this, createInjector(context));\n      };\n    }\n\n    if (hook !== undefined) {\n      if (component.functional) {\n        // register for functional component in vue file\n        var originalRender = component.render;\n        component.render = function renderWithStyleInjection(h, context) {\n          hook.call(context);\n          return originalRender(h, context);\n        };\n      } else {\n        // inject component registration as beforeCreate hook\n        var existing = component.beforeCreate;\n        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n      }\n    }\n  }\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__.styles || (__vue_create_injector__.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNavDropdown = __vue_normalize__$e({ render: __vue_render__$e, staticRenderFns: __vue_staticRenderFns__$e }, __vue_inject_styles__$e, __vue_script__$e, __vue_scope_id__$e, __vue_is_functional_template__$e, __vue_module_identifier__$e, __vue_create_injector__, undefined);\n\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n_export(_export.S, 'Object', { create: _objectCreate });\n\nvar $Object = _core.Object;\nvar create = function create(P, D) {\n  return $Object.create(P, D);\n};\n\nvar create$1 = createCommonjsModule(function (module) {\nmodule.exports = { \"default\": create, __esModule: true };\n});\n\nvar _Object$create = unwrapExports(create$1);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$f = {\n  name: 'sidebar-nav-link',\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: ''\n    },\n    badge: {\n      type: Object,\n      default: function _default() {}\n    },\n    variant: {\n      type: String,\n      default: ''\n    },\n    classes: {\n      type: [String, Array, Object],\n      default: ''\n    },\n    attributes: {\n      type: Object,\n      default: function _default() {\n        return _Object$create(null);\n      }\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['nav-link', this.linkVariant].concat(_toConsumableArray(this.disabledClasses), _toConsumableArray(this.attrClasses), _toConsumableArray(this.itemClasses));\n    },\n    classIcon: function classIcon() {\n      return ['nav-icon', this.icon];\n    },\n    linkVariant: function linkVariant() {\n      return this.variant ? 'nav-link-' + this.variant : '';\n    },\n    itemClasses: function itemClasses() {\n      return this.getClassArray(this.classes);\n    },\n    attrClasses: function attrClasses() {\n      return this.getClassArray(this.attributes.class);\n    },\n    disabledClasses: function disabledClasses() {\n      return this.isDisabled ? 'disabled'.split(' ') : [];\n    },\n    isDisabled: function isDisabled() {\n      return Boolean(this.attributes.disabled);\n    },\n    isExternalLink: function isExternalLink() {\n      return Boolean(this.url.substring(0, 4) === 'http');\n    }\n  },\n  methods: {\n    getClassArray: function getClassArray(classes) {\n      return !classes ? [] : typeof classes === 'string' || classes instanceof String ? classes.split(' ') : Array.isArray(classes) ? classes : _Object$keys(classes).filter(function (i) {\n        return classes[i];\n      });\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$f = script$f;\n\n/* template */\nvar __vue_render__$f = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _vm.isDisabled ? _c(\"a\", _vm._b({\n    class: _vm.classList,\n    attrs: { tabindex: \"-1\" },\n    on: {\n      click: function click($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n      }\n    }\n  }, \"a\", _vm.attributes, false), [_c(\"i\", { class: _vm.classIcon }), _vm._v(\" \"), _c(\"span\", [_vm._v(_vm._s(_vm.name))]), _vm._v(\" \"), _vm.badge && _vm.badge.text ? _c(\"b-badge\", { attrs: { variant: _vm.badge.variant } }, [_vm._v(_vm._s(_vm.badge.text))]) : _vm._e()], 1) : _vm.isExternalLink ? _c(\"a\", _vm._b({ class: _vm.classList, attrs: { href: _vm.url } }, \"a\", _vm.attributes, false), [_c(\"i\", { class: _vm.classIcon }), _vm._v(\" \" + _vm._s(_vm.name) + \"\\n  \"), _vm.badge && _vm.badge.text ? _c(\"b-badge\", { attrs: { variant: _vm.badge.variant } }, [_vm._v(_vm._s(_vm.badge.text))]) : _vm._e()], 1) : _c(\"router-link\", _vm._b({ class: _vm.classList, attrs: { to: _vm.url } }, \"router-link\", _vm.attributes, false), [_c(\"i\", { class: _vm.classIcon }), _vm._v(\" \" + _vm._s(_vm.name) + \"\\n  \"), _vm.badge && _vm.badge.text ? _c(\"b-badge\", { attrs: { variant: _vm.badge.variant } }, [_vm._v(_vm._s(_vm.badge.text))]) : _vm._e()], 1);\n};\nvar __vue_staticRenderFns__$f = [];\n__vue_render__$f._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$f = undefined;\n/* scoped */\nvar __vue_scope_id__$f = undefined;\n/* module identifier */\nvar __vue_module_identifier__$f = undefined;\n/* functional template */\nvar __vue_is_functional_template__$f = false;\n/* component normalizer */\nfunction __vue_normalize__$f(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavLink.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarNavLink = __vue_normalize__$f({ render: __vue_render__$f, staticRenderFns: __vue_staticRenderFns__$f }, __vue_inject_styles__$f, __vue_script__$f, __vue_scope_id__$f, __vue_is_functional_template__$f, __vue_module_identifier__$f, undefined, undefined);\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nvar script$g = {\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    classes: {\n      type: [String, Array, Object],\n      default: ''\n    },\n    wrapper: {\n      type: Object,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['nav-title'].concat(_toConsumableArray(this.itemClasses));\n    },\n    itemClasses: function itemClasses() {\n      var classes = this.classes;\n      return !classes ? [] : typeof classes === 'string' || classes instanceof String ? classes.split(' ') : Array.isArray(classes) ? classes : _Object$keys(classes).filter(function (i) {\n        return classes[i];\n      });\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$g = script$g;\n\n/* template */\nvar __vue_render__$g = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"li\", { class: _vm.classList }, [_vm.wrapper && _vm.wrapper.element ? [_c(_vm.wrapper.element, _vm._b({ tag: \"component\" }, \"component\", _vm.wrapper.attributes, false), [_vm._v(\"\\n      \" + _vm._s(_vm.name) + \"\\n    \")])] : [_vm._v(\"\\n    \" + _vm._s(_vm.name) + \"\\n  \")]], 2);\n};\nvar __vue_staticRenderFns__$g = [];\n__vue_render__$g._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$g = undefined;\n/* scoped */\nvar __vue_scope_id__$g = undefined;\n/* module identifier */\nvar __vue_module_identifier__$g = undefined;\n/* functional template */\nvar __vue_is_functional_template__$g = false;\n/* component normalizer */\nfunction __vue_normalize__$g(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavTitle.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarNavTitle = __vue_normalize__$g({ render: __vue_render__$g, staticRenderFns: __vue_staticRenderFns__$g }, __vue_inject_styles__$g, __vue_script__$g, __vue_scope_id__$g, __vue_is_functional_template__$g, __vue_module_identifier__$g, undefined, undefined);\n\nvar script$h = {\n  name: 'sidebar-nav-item',\n  mixins: [hideMobile],\n  props: {\n    classes: {\n      type: [String, Array, Object],\n      default: ''\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['nav-item'].concat(_toConsumableArray(this.itemClasses));\n    },\n    itemClasses: function itemClasses() {\n      var classes = this.classes;\n      return !classes ? [] : typeof classes === 'string' || classes instanceof String ? classes.split(' ') : Array.isArray(classes) ? classes : _Object$keys(classes).filter(function (i) {\n        return classes[i];\n      });\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$h = script$h;\n\n/* template */\nvar __vue_render__$h = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"li\", { class: _vm.classList, on: { click: _vm.hideMobile } }, [_vm._t(\"default\")], 2);\n};\nvar __vue_staticRenderFns__$h = [];\n__vue_render__$h._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$h = undefined;\n/* scoped */\nvar __vue_scope_id__$h = undefined;\n/* module identifier */\nvar __vue_module_identifier__$h = undefined;\n/* functional template */\nvar __vue_is_functional_template__$h = false;\n/* component normalizer */\nfunction __vue_normalize__$h(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavItem.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarNavItem = __vue_normalize__$h({ render: __vue_render__$h, staticRenderFns: __vue_staticRenderFns__$h }, __vue_inject_styles__$h, __vue_script__$h, __vue_scope_id__$h, __vue_is_functional_template__$h, __vue_module_identifier__$h, undefined, undefined);\n\nvar script$i = {\n  name: 'sidebar-nav-label',\n  components: {\n    SidebarNavItem: SidebarNavItem,\n    SidebarNavLink: SidebarNavLink\n  },\n  props: {\n    name: {\n      type: String,\n      default: ''\n    },\n    url: {\n      type: String,\n      default: '#'\n    },\n    icon: {\n      type: String,\n      default: 'fa fa-circle'\n    },\n    classes: {\n      type: [String, Array, Object],\n      default: ''\n    },\n    label: {\n      type: Object,\n      required: true,\n      default: function _default() {}\n    }\n  },\n  computed: {\n    classList: function classList() {\n      var classes = {\n        navItem: ['hidden-cn'].concat(_toConsumableArray(this.itemClasses)),\n        navLink: 'nav-label',\n        icon: [this.icon ? this.icon : 'fa fa-circle', this.label.variant ? 'text-' + this.label.variant : '', this.label.class ? this.label.class : ''].join(' ')\n      };\n      return classes;\n    },\n    itemClasses: function itemClasses() {\n      var classes = this.classes;\n      return !classes ? [] : typeof classes === 'string' || classes instanceof String ? classes.split(' ') : Array.isArray(classes) ? classes : _Object$keys(classes).filter(function (i) {\n        return classes[i];\n      });\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$i = script$i;\n\n/* template */\nvar __vue_render__$i = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"SidebarNavItem\", { attrs: { classes: _vm.classList.navItem } }, [_c(\"a\", { class: _vm.classList.navLink, attrs: { href: _vm.url } }, [_c(\"i\", { class: _vm.classList.icon }), _vm._v(\" \" + _vm._s(_vm.name))])]);\n};\nvar __vue_staticRenderFns__$i = [];\n__vue_render__$i._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$i = undefined;\n/* scoped */\nvar __vue_scope_id__$i = undefined;\n/* module identifier */\nvar __vue_module_identifier__$i = undefined;\n/* functional template */\nvar __vue_is_functional_template__$i = false;\n/* component normalizer */\nfunction __vue_normalize__$i(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNavLabel.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarNavLabel = __vue_normalize__$i({ render: __vue_render__$i, staticRenderFns: __vue_staticRenderFns__$i }, __vue_inject_styles__$i, __vue_script__$i, __vue_scope_id__$i, __vue_is_functional_template__$i, __vue_module_identifier__$i, undefined, undefined);\n\nvar script$j = {\n  name: 'SidebarNav',\n  components: {\n    SidebarNavDivider: SidebarNavDivider,\n    SidebarNavDropdown: SidebarNavDropdown,\n    SidebarNavLink: SidebarNavLink,\n    SidebarNavTitle: SidebarNavTitle,\n    SidebarNavItem: SidebarNavItem,\n    SidebarNavLabel: SidebarNavLabel,\n    VuePerfectScrollbar: vue_perfect_scrollbar__WEBPACK_IMPORTED_MODULE_1___default.a\n  },\n  props: {\n    navItems: {\n      type: Array,\n      required: true,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {};\n  },\n\n  computed: {\n    psSettings: function psSettings() {\n      // ToDo: find better rtl fix\n      return {\n        maxScrollbarLength: 200,\n        minScrollbarLength: 40,\n        suppressScrollX: getComputedStyle(document.querySelector('html')).direction !== 'rtl',\n        wheelPropagation: false,\n        interceptRailY: function interceptRailY(styles) {\n          return _extends$1({}, styles, { height: 0 });\n        }\n      };\n    }\n  },\n  methods: {\n    scrollHandle: function scrollHandle(evt) {\n      // console.log(evt)\n    }\n  }\n};\n\nvar __vue_script__$j = script$j;\n\n/* template */\nvar __vue_render__$j = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"nav\", { staticClass: \"sidebar-nav\" }, [_c(\"VuePerfectScrollbar\", {\n    staticClass: \"scroll-area\",\n    attrs: { settings: _vm.psSettings },\n    on: { \"ps-scroll-y\": _vm.scrollHandle }\n  }, [_c(\"ul\", { staticClass: \"nav\" }, [_vm._l(_vm.navItems, function (item, index) {\n    return [item.title ? [_c(\"SidebarNavTitle\", {\n      key: index,\n      attrs: {\n        name: item.name,\n        classes: item.class,\n        wrapper: item.wrapper\n      }\n    })] : item.divider ? [_c(\"SidebarNavDivider\", {\n      key: index,\n      attrs: { classes: item.class }\n    })] : item.label ? [_c(\"SidebarNavLabel\", {\n      key: index,\n      attrs: {\n        name: item.name,\n        url: item.url,\n        icon: item.icon,\n        label: item.label,\n        classes: item.class\n      }\n    })] : [item.children ? [_c(\"SidebarNavDropdown\", {\n      key: index,\n      attrs: {\n        name: item.name,\n        url: item.url,\n        icon: item.icon\n      }\n    }, [_vm._l(item.children, function (childL1, index1) {\n      return [childL1.children ? [_c(\"SidebarNavDropdown\", {\n        key: index1,\n        attrs: {\n          name: childL1.name,\n          url: childL1.url,\n          icon: childL1.icon\n        }\n      }, _vm._l(childL1.children, function (childL2, index2) {\n        return _c(\"li\", {\n          key: index2,\n          staticClass: \"nav-item\"\n        }, [_c(\"SidebarNavLink\", {\n          attrs: {\n            name: childL2.name,\n            url: childL2.url,\n            icon: childL2.icon,\n            badge: childL2.badge,\n            variant: childL2.variant,\n            attributes: childL2.attributes\n          }\n        })], 1);\n      }))] : [_c(\"SidebarNavItem\", {\n        key: index1,\n        attrs: {\n          classes: item.class\n        }\n      }, [_c(\"SidebarNavLink\", {\n        attrs: {\n          name: childL1.name,\n          url: childL1.url,\n          icon: childL1.icon,\n          badge: childL1.badge,\n          variant: childL1.variant,\n          attributes: childL1.attributes\n        }\n      })], 1)]];\n    })], 2)] : [_c(\"SidebarNavItem\", {\n      key: index,\n      attrs: { classes: item.class }\n    }, [_c(\"SidebarNavLink\", {\n      attrs: {\n        name: item.name,\n        url: item.url,\n        icon: item.icon,\n        badge: item.badge,\n        variant: item.variant,\n        attributes: item.attributes\n      }\n    })], 1)]]];\n  })], 2), _vm._v(\" \"), _vm._t(\"default\")], 2)], 1);\n};\nvar __vue_staticRenderFns__$j = [];\n__vue_render__$j._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$j = function __vue_inject_styles__(inject) {\n  if (!inject) return;\n  inject(\"data-v-2ba57165_0\", { source: \"\\n.scroll-area[data-v-2ba57165] {\\n  position: absolute;\\n  height: 100%;\\n  margin: auto;\\n}\\n\", map: { \"version\": 3, \"sources\": [\"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon/D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNav.vue\"], \"names\": [], \"mappings\": \";AAmGA;EACA,mBAAA;EACA,aAAA;EACA,aAAA;CACA\", \"file\": \"SidebarNav.vue\", \"sourcesContent\": [\"<template>\\r\\n  <nav class=\\\"sidebar-nav\\\">\\r\\n    <VuePerfectScrollbar class=\\\"scroll-area\\\" :settings=\\\"psSettings\\\" @ps-scroll-y=\\\"scrollHandle\\\">\\r\\n      <ul class=\\\"nav\\\">\\r\\n        <template v-for=\\\"(item, index) in navItems\\\">\\r\\n          <template v-if=\\\"item.title\\\">\\r\\n            <SidebarNavTitle :key=\\\"index\\\" :name=\\\"item.name\\\" :classes=\\\"item.class\\\" :wrapper=\\\"item.wrapper\\\"/>\\r\\n          </template>\\r\\n          <template v-else-if=\\\"item.divider\\\">\\r\\n            <SidebarNavDivider :key=\\\"index\\\" :classes=\\\"item.class\\\"/>\\r\\n          </template>\\r\\n          <template v-else-if=\\\"item.label\\\">\\r\\n            <SidebarNavLabel :key=\\\"index\\\" :name=\\\"item.name\\\" :url=\\\"item.url\\\" :icon=\\\"item.icon\\\" :label=\\\"item.label\\\" :classes=\\\"item.class\\\"/>\\r\\n          </template>\\r\\n          <template v-else>\\r\\n            <template v-if=\\\"item.children\\\">\\r\\n              <!-- First level dropdown -->\\r\\n              <SidebarNavDropdown :key=\\\"index\\\" :name=\\\"item.name\\\" :url=\\\"item.url\\\" :icon=\\\"item.icon\\\">\\r\\n                <template v-for=\\\"(childL1, index1) in item.children\\\">\\r\\n                  <template v-if=\\\"childL1.children\\\">\\r\\n                    <!-- Second level dropdown -->\\r\\n                    <SidebarNavDropdown :key=\\\"index1\\\" :name=\\\"childL1.name\\\" :url=\\\"childL1.url\\\" :icon=\\\"childL1.icon\\\">\\r\\n                      <li :key=\\\"index2\\\" class=\\\"nav-item\\\" v-for=\\\"(childL2, index2) in childL1.children\\\">\\r\\n                        <SidebarNavLink :name=\\\"childL2.name\\\" :url=\\\"childL2.url\\\" :icon=\\\"childL2.icon\\\" :badge=\\\"childL2.badge\\\" :variant=\\\"childL2.variant\\\" :attributes=\\\"childL2.attributes\\\" />\\r\\n                      </li>\\r\\n                    </SidebarNavDropdown>\\r\\n                  </template>\\r\\n                  <template v-else>\\r\\n                    <SidebarNavItem :key=\\\"index1\\\" :classes=\\\"item.class\\\">\\r\\n                      <SidebarNavLink :name=\\\"childL1.name\\\" :url=\\\"childL1.url\\\" :icon=\\\"childL1.icon\\\" :badge=\\\"childL1.badge\\\" :variant=\\\"childL1.variant\\\" :attributes=\\\"childL1.attributes\\\"/>\\r\\n                    </SidebarNavItem>\\r\\n                  </template>\\r\\n                </template>\\r\\n              </SidebarNavDropdown>\\r\\n            </template>\\r\\n            <template v-else>\\r\\n              <SidebarNavItem :key=\\\"index\\\" :classes=\\\"item.class\\\">\\r\\n                <SidebarNavLink :name=\\\"item.name\\\" :url=\\\"item.url\\\" :icon=\\\"item.icon\\\" :badge=\\\"item.badge\\\" :variant=\\\"item.variant\\\" :attributes=\\\"item.attributes\\\"/>\\r\\n              </SidebarNavItem>\\r\\n            </template>\\r\\n          </template>\\r\\n        </template>\\r\\n      </ul>\\r\\n      <slot></slot>\\r\\n    </VuePerfectScrollbar>\\r\\n  </nav>\\r\\n</template>\\r\\n\\r\\n<script>\\r\\nimport SidebarNavDivider from './SidebarNavDivider'\\r\\nimport SidebarNavDropdown from './SidebarNavDropdown'\\r\\nimport SidebarNavLink from './SidebarNavLink'\\r\\nimport SidebarNavTitle from './SidebarNavTitle'\\r\\nimport SidebarNavItem from './SidebarNavItem'\\r\\nimport SidebarNavLabel from './SidebarNavLabel'\\r\\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\\r\\n\\r\\nexport default {\\r\\n  name: 'SidebarNav',\\r\\n  components: {\\r\\n    SidebarNavDivider,\\r\\n    SidebarNavDropdown,\\r\\n    SidebarNavLink,\\r\\n    SidebarNavTitle,\\r\\n    SidebarNavItem,\\r\\n    SidebarNavLabel,\\r\\n    VuePerfectScrollbar\\r\\n  },\\r\\n  props: {\\r\\n    navItems: {\\r\\n      type: Array,\\r\\n      required: true,\\r\\n      default: () => []\\r\\n    }\\r\\n  },\\r\\n  data () {\\r\\n    return {}\\r\\n  },\\r\\n  computed: {\\r\\n    psSettings: () => {\\r\\n      // ToDo: find better rtl fix\\r\\n      return {\\r\\n        maxScrollbarLength: 200,\\r\\n        minScrollbarLength: 40,\\r\\n        suppressScrollX: getComputedStyle(document.querySelector('html')).direction !== 'rtl',\\r\\n        wheelPropagation: false,\\r\\n        interceptRailY: styles => ({ ...styles, height: 0 })\\r\\n      }\\r\\n    }\\r\\n  },\\r\\n  methods: {\\r\\n    scrollHandle (evt) {\\r\\n      // console.log(evt)\\r\\n    }\\r\\n  }\\r\\n}\\r\\n</script>\\r\\n\\r\\n<style scoped lang=\\\"css\\\">\\r\\n  .scroll-area {\\r\\n    position: absolute;\\r\\n    height: 100%;\\r\\n    margin: auto;\\r\\n  }\\r\\n</style>\\r\\n\"] }, media: undefined });\n};\n/* scoped */\nvar __vue_scope_id__$j = \"data-v-2ba57165\";\n/* module identifier */\nvar __vue_module_identifier__$j = undefined;\n/* functional template */\nvar __vue_is_functional_template__$j = false;\n/* component normalizer */\nfunction __vue_normalize__$j(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarNav.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  {\n    var hook = void 0;\n    if (style) {\n      hook = function hook(context) {\n        style.call(this, createInjector(context));\n      };\n    }\n\n    if (hook !== undefined) {\n      if (component.functional) {\n        // register for functional component in vue file\n        var originalRender = component.render;\n        component.render = function renderWithStyleInjection(h, context) {\n          hook.call(context);\n          return originalRender(h, context);\n        };\n      } else {\n        // inject component registration as beforeCreate hook\n        var existing = component.beforeCreate;\n        component.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n      }\n    }\n  }\n\n  return component;\n}\n/* style inject */\nfunction __vue_create_injector__$1() {\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var styles = __vue_create_injector__$1.styles || (__vue_create_injector__$1.styles = {});\n  var isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\n\n  return function addStyle(id, css) {\n    if (document.querySelector('style[data-vue-ssr-id~=\"' + id + '\"]')) return; // SSR styles are present.\n\n    var group = isOldIE ? css.media || 'default' : id;\n    var style = styles[group] || (styles[group] = { ids: [], parts: [], element: undefined });\n\n    if (!style.ids.includes(id)) {\n      var code = css.source;\n      var index = style.ids.length;\n\n      style.ids.push(id);\n\n      if (isOldIE) {\n        style.element = style.element || document.querySelector('style[data-group=' + group + ']');\n      }\n\n      if (!style.element) {\n        var el = style.element = document.createElement('style');\n        el.type = 'text/css';\n\n        if (css.media) el.setAttribute('media', css.media);\n        if (isOldIE) {\n          el.setAttribute('data-group', group);\n          el.setAttribute('data-next-index', '0');\n        }\n\n        head.appendChild(el);\n      }\n\n      if (isOldIE) {\n        index = parseInt(style.element.getAttribute('data-next-index'));\n        style.element.setAttribute('data-next-index', index + 1);\n      }\n\n      if (style.element.styleSheet) {\n        style.parts.push(code);\n        style.element.styleSheet.cssText = style.parts.filter(Boolean).join('\\n');\n      } else {\n        var textNode = document.createTextNode(code);\n        var nodes = style.element.childNodes;\n        if (nodes[index]) style.element.removeChild(nodes[index]);\n        if (nodes.length) style.element.insertBefore(textNode, nodes[index]);else style.element.appendChild(textNode);\n      }\n    }\n  };\n}\n/* style inject SSR */\n\nvar SidebarNav = __vue_normalize__$j({ render: __vue_render__$j, staticRenderFns: __vue_staticRenderFns__$j }, __vue_inject_styles__$j, __vue_script__$j, __vue_scope_id__$j, __vue_is_functional_template__$j, __vue_module_identifier__$j, __vue_create_injector__$1, undefined);\n\n//\n\nvar script$k = {\n  name: 'SidebarToggler',\n  props: {\n    defaultOpen: {\n      type: Boolean,\n      default: true\n    },\n    display: {\n      type: String,\n      default: 'lg'\n    },\n    mobile: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    classList: function classList() {\n      return ['navbar-toggler'];\n    }\n  },\n  mounted: function mounted() {\n    this.toggle(this.defaultOpen);\n  },\n  methods: {\n    toggle: function toggle(force) {\n      var _ref = [this.display, this.mobile],\n          display = _ref[0],\n          mobile = _ref[1];\n\n      var cssClass = sidebarCssClasses[0];\n      if (!mobile && display && checkBreakpoint(display, validBreakpoints)) {\n        cssClass = 'sidebar-' + display + '-show';\n      }\n      toggleClasses(cssClass, sidebarCssClasses, force);\n    },\n    sidebarToggle: function sidebarToggle(e) {\n      e.preventDefault();\n      e.stopPropagation();\n      this.toggle();\n    }\n  }\n};\n\n/* script */\nvar __vue_script__$k = script$k;\n\n/* template */\nvar __vue_render__$k = function __vue_render__() {\n  var _vm = this;\n  var _h = _vm.$createElement;\n  var _c = _vm._self._c || _h;\n  return _c(\"button\", {\n    class: _vm.classList,\n    attrs: { display: _vm.display, mobile: _vm.mobile, type: \"button\" },\n    on: { click: _vm.sidebarToggle }\n  }, [_c(\"span\", { staticClass: \"navbar-toggler-icon\" })]);\n};\nvar __vue_staticRenderFns__$k = [];\n__vue_render__$k._withStripped = true;\n\n/* style */\nvar __vue_inject_styles__$k = undefined;\n/* scoped */\nvar __vue_scope_id__$k = undefined;\n/* module identifier */\nvar __vue_module_identifier__$k = undefined;\n/* functional template */\nvar __vue_is_functional_template__$k = false;\n/* component normalizer */\nfunction __vue_normalize__$k(template, style, script, scope, functional, moduleIdentifier, createInjector, createInjectorSSR) {\n  var component = (typeof script === 'function' ? script.options : script) || {};\n\n  // For security concerns, we use only base name in production mode.\n  component.__file = \"D:\\\\_Repos\\\\vue\\\\coreui-vue-julon\\\\src\\\\components\\\\Sidebar\\\\SidebarToggler.vue\";\n\n  if (!component.render) {\n    component.render = template.render;\n    component.staticRenderFns = template.staticRenderFns;\n    component._compiled = true;\n\n    if (functional) component.functional = true;\n  }\n\n  component._scopeId = scope;\n\n  return component;\n}\n/* style inject */\n\n/* style inject SSR */\n\nvar SidebarToggler = __vue_normalize__$k({ render: __vue_render__$k, staticRenderFns: __vue_staticRenderFns__$k }, __vue_inject_styles__$k, __vue_script__$k, __vue_scope_id__$k, __vue_is_functional_template__$k, __vue_module_identifier__$k, undefined, undefined);\n\nvar LibraryModule = {\n  Aside: Aside,\n  AsideToggler: AsideToggler,\n  Breadcrumb: Breadcrumb,\n  Callout: Callout,\n  Footer: Footer,\n  Header: Header,\n  HeaderDropdown: HeaderDropdown,\n  Sidebar: Sidebar,\n  SidebarFooter: SidebarFooter,\n  SidebarForm: SidebarForm,\n  SidebarHeader: SidebarHeader,\n  SidebarMinimizer: SidebarMinimizer,\n  SidebarNav: SidebarNav,\n  SidebarNavDivider: SidebarNavDivider,\n  SidebarNavDropdown: SidebarNavDropdown,\n  SidebarNavItem: SidebarNavItem,\n  SidebarNavLabel: SidebarNavLabel,\n  SidebarNavLink: SidebarNavLink,\n  SidebarNavTitle: SidebarNavTitle,\n  SidebarToggler: SidebarToggler,\n  Switch: Switch,\n\n  install: function install(Vue) {\n    // Register components with vue\n    Vue.component(\"Aside\", Aside);\n    Vue.component(\"AsideToggler\", AsideToggler);\n    Vue.component(\"Breadcrumb\", Breadcrumb);\n    Vue.component(\"Callout\", Callout);\n    Vue.component(\"Footer\", Footer);\n    Vue.component(\"Header\", Header);\n    Vue.component(\"HeaderDropdown\", HeaderDropdown);\n    Vue.component(\"Sidebar\", Sidebar);\n    Vue.component(\"SidebarFooter\", SidebarFooter);\n    Vue.component(\"SidebarForm\", SidebarForm);\n    Vue.component(\"SidebarHeader\", SidebarHeader);\n    Vue.component(\"SidebarMinimizer\", SidebarMinimizer);\n    Vue.component(\"SidebarNav\", SidebarNav);\n    Vue.component(\"SidebarNavDivider\", SidebarNavDivider);\n    Vue.component(\"SidebarNavDropdown\", SidebarNavDropdown);\n    Vue.component(\"SidebarNavItem\", SidebarNavItem);\n    Vue.component(\"SidebarNavLabel\", SidebarNavLabel);\n    Vue.component(\"SidebarNavLink\", SidebarNavLink);\n    Vue.component(\"SidebarNavTitle\", SidebarNavTitle);\n    Vue.component(\"SidebarToggler\", SidebarToggler);\n    Vue.component(\"Switch\", Switch);\n  }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (LibraryModule);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@coreui/vue/dist/coreui-vue.esm.js\n");

/***/ }),

/***/ "./node_modules/vue-clickaway/dist/vue-clickaway.common.js":
/*!*****************************************************************!*\
  !*** ./node_modules/vue-clickaway/dist/vue-clickaway.common.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\n\r\nvar Vue = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm.js\");\r\nVue = 'default' in Vue ? Vue['default'] : Vue;\r\n\r\nvar version = '2.2.2';\r\n\r\nvar compatible = (/^2\\./).test(Vue.version);\r\nif (!compatible) {\r\n  Vue.util.warn('VueClickaway ' + version + ' only supports Vue 2.x, and does not support Vue ' + Vue.version);\r\n}\r\n\r\n\r\n\r\n// @SECTION: implementation\r\n\r\nvar HANDLER = '_vue_clickaway_handler';\r\n\r\nfunction bind(el, binding, vnode) {\r\n  unbind(el);\r\n\r\n  var vm = vnode.context;\r\n\r\n  var callback = binding.value;\r\n  if (typeof callback !== 'function') {\r\n    if (true) {\r\n      Vue.util.warn(\r\n        'v-' + binding.name + '=\"' +\r\n        binding.expression + '\" expects a function value, ' +\r\n        'got ' + callback\r\n      );\r\n    }\r\n    return;\r\n  }\r\n\r\n  // @NOTE: Vue binds directives in microtasks, while UI events are dispatched\r\n  //        in macrotasks. This causes the listener to be set up before\r\n  //        the \"origin\" click event (the event that lead to the binding of\r\n  //        the directive) arrives at the document root. To work around that,\r\n  //        we ignore events until the end of the \"initial\" macrotask.\r\n  // @REFERENCE: https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n  // @REFERENCE: https://github.com/simplesmiler/vue-clickaway/issues/8\r\n  var initialMacrotaskEnded = false;\r\n  setTimeout(function() {\r\n    initialMacrotaskEnded = true;\r\n  }, 0);\r\n\r\n  el[HANDLER] = function(ev) {\r\n    // @NOTE: this test used to be just `el.containts`, but working with path is better,\r\n    //        because it tests whether the element was there at the time of\r\n    //        the click, not whether it is there now, that the event has arrived\r\n    //        to the top.\r\n    // @NOTE: `.path` is non-standard, the standard way is `.composedPath()`\r\n    var path = ev.path || (ev.composedPath ? ev.composedPath() : undefined);\r\n    if (initialMacrotaskEnded && (path ? path.indexOf(el) < 0 : !el.contains(ev.target))) {\r\n      return callback.call(vm, ev);\r\n    }\r\n  };\r\n\r\n  document.documentElement.addEventListener('click', el[HANDLER], false);\r\n}\r\n\r\nfunction unbind(el) {\r\n  document.documentElement.removeEventListener('click', el[HANDLER], false);\r\n  delete el[HANDLER];\r\n}\r\n\r\nvar directive = {\r\n  bind: bind,\r\n  update: function(el, binding) {\r\n    if (binding.value === binding.oldValue) return;\r\n    bind(el, binding);\r\n  },\r\n  unbind: unbind,\r\n};\r\n\r\nvar mixin = {\r\n  directives: { onClickaway: directive },\r\n};\r\n\r\nexports.version = version;\r\nexports.directive = directive;\r\nexports.mixin = mixin;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdnVlLWNsaWNrYXdheS9kaXN0L3Z1ZS1jbGlja2F3YXkuY29tbW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Z1ZS1jbGlja2F3YXkvZGlzdC92dWUtY2xpY2thd2F5LmNvbW1vbi5qcz9jN2RiIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBWdWUgPSByZXF1aXJlKCd2dWUnKTtcclxuVnVlID0gJ2RlZmF1bHQnIGluIFZ1ZSA/IFZ1ZVsnZGVmYXVsdCddIDogVnVlO1xyXG5cclxudmFyIHZlcnNpb24gPSAnMi4yLjInO1xyXG5cclxudmFyIGNvbXBhdGlibGUgPSAoL14yXFwuLykudGVzdChWdWUudmVyc2lvbik7XHJcbmlmICghY29tcGF0aWJsZSkge1xyXG4gIFZ1ZS51dGlsLndhcm4oJ1Z1ZUNsaWNrYXdheSAnICsgdmVyc2lvbiArICcgb25seSBzdXBwb3J0cyBWdWUgMi54LCBhbmQgZG9lcyBub3Qgc3VwcG9ydCBWdWUgJyArIFZ1ZS52ZXJzaW9uKTtcclxufVxyXG5cclxuXHJcblxyXG4vLyBAU0VDVElPTjogaW1wbGVtZW50YXRpb25cclxuXHJcbnZhciBIQU5ETEVSID0gJ192dWVfY2xpY2thd2F5X2hhbmRsZXInO1xyXG5cclxuZnVuY3Rpb24gYmluZChlbCwgYmluZGluZywgdm5vZGUpIHtcclxuICB1bmJpbmQoZWwpO1xyXG5cclxuICB2YXIgdm0gPSB2bm9kZS5jb250ZXh0O1xyXG5cclxuICB2YXIgY2FsbGJhY2sgPSBiaW5kaW5nLnZhbHVlO1xyXG4gIGlmICh0eXBlb2YgY2FsbGJhY2sgIT09ICdmdW5jdGlvbicpIHtcclxuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XHJcbiAgICAgIFZ1ZS51dGlsLndhcm4oXHJcbiAgICAgICAgJ3YtJyArIGJpbmRpbmcubmFtZSArICc9XCInICtcclxuICAgICAgICBiaW5kaW5nLmV4cHJlc3Npb24gKyAnXCIgZXhwZWN0cyBhIGZ1bmN0aW9uIHZhbHVlLCAnICtcclxuICAgICAgICAnZ290ICcgKyBjYWxsYmFja1xyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuO1xyXG4gIH1cclxuXHJcbiAgLy8gQE5PVEU6IFZ1ZSBiaW5kcyBkaXJlY3RpdmVzIGluIG1pY3JvdGFza3MsIHdoaWxlIFVJIGV2ZW50cyBhcmUgZGlzcGF0Y2hlZFxyXG4gIC8vICAgICAgICBpbiBtYWNyb3Rhc2tzLiBUaGlzIGNhdXNlcyB0aGUgbGlzdGVuZXIgdG8gYmUgc2V0IHVwIGJlZm9yZVxyXG4gIC8vICAgICAgICB0aGUgXCJvcmlnaW5cIiBjbGljayBldmVudCAodGhlIGV2ZW50IHRoYXQgbGVhZCB0byB0aGUgYmluZGluZyBvZlxyXG4gIC8vICAgICAgICB0aGUgZGlyZWN0aXZlKSBhcnJpdmVzIGF0IHRoZSBkb2N1bWVudCByb290LiBUbyB3b3JrIGFyb3VuZCB0aGF0LFxyXG4gIC8vICAgICAgICB3ZSBpZ25vcmUgZXZlbnRzIHVudGlsIHRoZSBlbmQgb2YgdGhlIFwiaW5pdGlhbFwiIG1hY3JvdGFzay5cclxuICAvLyBAUkVGRVJFTkNFOiBodHRwczovL2pha2VhcmNoaWJhbGQuY29tLzIwMTUvdGFza3MtbWljcm90YXNrcy1xdWV1ZXMtYW5kLXNjaGVkdWxlcy9cclxuICAvLyBAUkVGRVJFTkNFOiBodHRwczovL2dpdGh1Yi5jb20vc2ltcGxlc21pbGVyL3Z1ZS1jbGlja2F3YXkvaXNzdWVzLzhcclxuICB2YXIgaW5pdGlhbE1hY3JvdGFza0VuZGVkID0gZmFsc2U7XHJcbiAgc2V0VGltZW91dChmdW5jdGlvbigpIHtcclxuICAgIGluaXRpYWxNYWNyb3Rhc2tFbmRlZCA9IHRydWU7XHJcbiAgfSwgMCk7XHJcblxyXG4gIGVsW0hBTkRMRVJdID0gZnVuY3Rpb24oZXYpIHtcclxuICAgIC8vIEBOT1RFOiB0aGlzIHRlc3QgdXNlZCB0byBiZSBqdXN0IGBlbC5jb250YWludHNgLCBidXQgd29ya2luZyB3aXRoIHBhdGggaXMgYmV0dGVyLFxyXG4gICAgLy8gICAgICAgIGJlY2F1c2UgaXQgdGVzdHMgd2hldGhlciB0aGUgZWxlbWVudCB3YXMgdGhlcmUgYXQgdGhlIHRpbWUgb2ZcclxuICAgIC8vICAgICAgICB0aGUgY2xpY2ssIG5vdCB3aGV0aGVyIGl0IGlzIHRoZXJlIG5vdywgdGhhdCB0aGUgZXZlbnQgaGFzIGFycml2ZWRcclxuICAgIC8vICAgICAgICB0byB0aGUgdG9wLlxyXG4gICAgLy8gQE5PVEU6IGAucGF0aGAgaXMgbm9uLXN0YW5kYXJkLCB0aGUgc3RhbmRhcmQgd2F5IGlzIGAuY29tcG9zZWRQYXRoKClgXHJcbiAgICB2YXIgcGF0aCA9IGV2LnBhdGggfHwgKGV2LmNvbXBvc2VkUGF0aCA/IGV2LmNvbXBvc2VkUGF0aCgpIDogdW5kZWZpbmVkKTtcclxuICAgIGlmIChpbml0aWFsTWFjcm90YXNrRW5kZWQgJiYgKHBhdGggPyBwYXRoLmluZGV4T2YoZWwpIDwgMCA6ICFlbC5jb250YWlucyhldi50YXJnZXQpKSkge1xyXG4gICAgICByZXR1cm4gY2FsbGJhY2suY2FsbCh2bSwgZXYpO1xyXG4gICAgfVxyXG4gIH07XHJcblxyXG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGVsW0hBTkRMRVJdLCBmYWxzZSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVuYmluZChlbCkge1xyXG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIGVsW0hBTkRMRVJdLCBmYWxzZSk7XHJcbiAgZGVsZXRlIGVsW0hBTkRMRVJdO1xyXG59XHJcblxyXG52YXIgZGlyZWN0aXZlID0ge1xyXG4gIGJpbmQ6IGJpbmQsXHJcbiAgdXBkYXRlOiBmdW5jdGlvbihlbCwgYmluZGluZykge1xyXG4gICAgaWYgKGJpbmRpbmcudmFsdWUgPT09IGJpbmRpbmcub2xkVmFsdWUpIHJldHVybjtcclxuICAgIGJpbmQoZWwsIGJpbmRpbmcpO1xyXG4gIH0sXHJcbiAgdW5iaW5kOiB1bmJpbmQsXHJcbn07XHJcblxyXG52YXIgbWl4aW4gPSB7XHJcbiAgZGlyZWN0aXZlczogeyBvbkNsaWNrYXdheTogZGlyZWN0aXZlIH0sXHJcbn07XHJcblxyXG5leHBvcnRzLnZlcnNpb24gPSB2ZXJzaW9uO1xyXG5leHBvcnRzLmRpcmVjdGl2ZSA9IGRpcmVjdGl2ZTtcclxuZXhwb3J0cy5taXhpbiA9IG1peGluOyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-clickaway/dist/vue-clickaway.common.js\n");

/***/ }),

/***/ "./node_modules/vue-perfect-scrollbar/dist/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/vue-perfect-scrollbar/dist/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports=function(t){function e(o){if(r[o])return r[o].exports;var n=r[o]={i:o,l:!1,exports:{}};return t[o].call(n.exports,n,n.exports,e),n.l=!0,n.exports}var r={};return e.m=t,e.c=r,e.i=function(t){return t},e.d=function(t,r,o){e.o(t,r)||Object.defineProperty(t,r,{configurable:!1,enumerable:!0,get:o})},e.n=function(t){var r=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(r,\"a\",r),r},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p=\"/dist/\",e(e.s=6)}([function(t,e,r){\"use strict\";function o(t,e){function r(){t.classList.add(\"ps--focus\")}function o(){t.classList.remove(\"ps--focus\")}var n=this;n.settings=a();for(var i in e)n.settings[i]=e[i];n.containerWidth=null,n.containerHeight=null,n.contentWidth=null,n.contentHeight=null,n.isRtl=\"rtl\"===c.css(t,\"direction\"),n.isNegativeScroll=function(){var e=t.scrollLeft,r=null;return t.scrollLeft=-1,r=t.scrollLeft<0,t.scrollLeft=e,r}(),n.negativeScrollAdjustment=n.isNegativeScroll?t.scrollWidth-t.clientWidth:0,n.event=new u,n.ownerDocument=t.ownerDocument||document,n.scrollbarXRail=c.appendTo(c.create(\"div\",\"ps__scrollbar-x-rail\"),t),n.scrollbarX=c.appendTo(c.create(\"div\",\"ps__scrollbar-x\"),n.scrollbarXRail),n.scrollbarX.setAttribute(\"tabindex\",0),n.event.bind(n.scrollbarX,\"focus\",r),n.event.bind(n.scrollbarX,\"blur\",o),n.scrollbarXActive=null,n.scrollbarXWidth=null,n.scrollbarXLeft=null,n.scrollbarXBottom=s.toInt(c.css(n.scrollbarXRail,\"bottom\")),n.isScrollbarXUsingBottom=n.scrollbarXBottom===n.scrollbarXBottom,n.scrollbarXTop=n.isScrollbarXUsingBottom?null:s.toInt(c.css(n.scrollbarXRail,\"top\")),n.railBorderXWidth=s.toInt(c.css(n.scrollbarXRail,\"borderLeftWidth\"))+s.toInt(c.css(n.scrollbarXRail,\"borderRightWidth\")),c.css(n.scrollbarXRail,\"display\",\"block\"),n.railXMarginWidth=s.toInt(c.css(n.scrollbarXRail,\"marginLeft\"))+s.toInt(c.css(n.scrollbarXRail,\"marginRight\")),c.css(n.scrollbarXRail,\"display\",\"\"),n.railXWidth=null,n.railXRatio=null,n.scrollbarYRail=c.appendTo(c.create(\"div\",\"ps__scrollbar-y-rail\"),t),n.scrollbarY=c.appendTo(c.create(\"div\",\"ps__scrollbar-y\"),n.scrollbarYRail),n.scrollbarY.setAttribute(\"tabindex\",0),n.event.bind(n.scrollbarY,\"focus\",r),n.event.bind(n.scrollbarY,\"blur\",o),n.scrollbarYActive=null,n.scrollbarYHeight=null,n.scrollbarYTop=null,n.scrollbarYRight=s.toInt(c.css(n.scrollbarYRail,\"right\")),n.isScrollbarYUsingRight=n.scrollbarYRight===n.scrollbarYRight,n.scrollbarYLeft=n.isScrollbarYUsingRight?null:s.toInt(c.css(n.scrollbarYRail,\"left\")),n.scrollbarYOuterWidth=n.isRtl?s.outerWidth(n.scrollbarY):null,n.railBorderYWidth=s.toInt(c.css(n.scrollbarYRail,\"borderTopWidth\"))+s.toInt(c.css(n.scrollbarYRail,\"borderBottomWidth\")),c.css(n.scrollbarYRail,\"display\",\"block\"),n.railYMarginHeight=s.toInt(c.css(n.scrollbarYRail,\"marginTop\"))+s.toInt(c.css(n.scrollbarYRail,\"marginBottom\")),c.css(n.scrollbarYRail,\"display\",\"\"),n.railYHeight=null,n.railYRatio=null}function n(t){return t.getAttribute(\"data-ps-id\")}function i(t,e){t.setAttribute(\"data-ps-id\",e)}function l(t){t.removeAttribute(\"data-ps-id\")}var s=r(2),a=r(14),c=r(4),u=r(11),p=r(12),d={};e.add=function(t,e){var r=p();return i(t,r),d[r]=new o(t,e),d[r]},e.remove=function(t){delete d[n(t)],l(t)},e.get=function(t){return d[n(t)]}},function(t,e,r){\"use strict\";function o(t,e){return t.settings.minScrollbarLength&&(e=Math.max(e,t.settings.minScrollbarLength)),t.settings.maxScrollbarLength&&(e=Math.min(e,t.settings.maxScrollbarLength)),e}function n(t,e){var r={width:e.railXWidth};e.isRtl?r.left=e.negativeScrollAdjustment+t.scrollLeft+e.containerWidth-e.contentWidth:r.left=t.scrollLeft,e.isScrollbarXUsingBottom?r.bottom=e.scrollbarXBottom-t.scrollTop:r.top=e.scrollbarXTop+t.scrollTop,l.css(e.scrollbarXRail,r);var o={top:t.scrollTop,height:e.railYHeight};e.isScrollbarYUsingRight?e.isRtl?o.right=e.contentWidth-(e.negativeScrollAdjustment+t.scrollLeft)-e.scrollbarYRight-e.scrollbarYOuterWidth:o.right=e.scrollbarYRight-t.scrollLeft:e.isRtl?o.left=e.negativeScrollAdjustment+t.scrollLeft+2*e.containerWidth-e.contentWidth-e.scrollbarYLeft-e.scrollbarYOuterWidth:o.left=e.scrollbarYLeft+t.scrollLeft,l.css(e.scrollbarYRail,o),l.css(e.scrollbarX,{left:e.scrollbarXLeft,width:e.scrollbarXWidth-e.railBorderXWidth}),l.css(e.scrollbarY,{top:e.scrollbarYTop,height:e.scrollbarYHeight-e.railBorderYWidth})}var i=r(2),l=r(4),s=r(0),a=r(3);t.exports=function(t){var e=s.get(t);e.containerWidth=t.clientWidth,e.containerHeight=t.clientHeight,e.contentWidth=t.scrollWidth,e.contentHeight=t.scrollHeight;var r;t.contains(e.scrollbarXRail)||(r=l.queryChildren(t,\".ps__scrollbar-x-rail\"),r.length>0&&r.forEach(function(t){l.remove(t)}),l.appendTo(e.scrollbarXRail,t)),t.contains(e.scrollbarYRail)||(r=l.queryChildren(t,\".ps__scrollbar-y-rail\"),r.length>0&&r.forEach(function(t){l.remove(t)}),l.appendTo(e.scrollbarYRail,t)),!e.settings.suppressScrollX&&e.containerWidth+e.settings.scrollXMarginOffset<e.contentWidth?(e.scrollbarXActive=!0,e.railXWidth=e.containerWidth-e.railXMarginWidth,e.railXRatio=e.containerWidth/e.railXWidth,e.scrollbarXWidth=o(e,i.toInt(e.railXWidth*e.containerWidth/e.contentWidth)),e.scrollbarXLeft=i.toInt((e.negativeScrollAdjustment+t.scrollLeft)*(e.railXWidth-e.scrollbarXWidth)/(e.contentWidth-e.containerWidth))):e.scrollbarXActive=!1,!e.settings.suppressScrollY&&e.containerHeight+e.settings.scrollYMarginOffset<e.contentHeight?(e.scrollbarYActive=!0,e.railYHeight=e.containerHeight-e.railYMarginHeight,e.railYRatio=e.containerHeight/e.railYHeight,e.scrollbarYHeight=o(e,i.toInt(e.railYHeight*e.containerHeight/e.contentHeight)),e.scrollbarYTop=i.toInt(t.scrollTop*(e.railYHeight-e.scrollbarYHeight)/(e.contentHeight-e.containerHeight))):e.scrollbarYActive=!1,e.scrollbarXLeft>=e.railXWidth-e.scrollbarXWidth&&(e.scrollbarXLeft=e.railXWidth-e.scrollbarXWidth),e.scrollbarYTop>=e.railYHeight-e.scrollbarYHeight&&(e.scrollbarYTop=e.railYHeight-e.scrollbarYHeight),n(t,e),e.scrollbarXActive?t.classList.add(\"ps--active-x\"):(t.classList.remove(\"ps--active-x\"),e.scrollbarXWidth=0,e.scrollbarXLeft=0,a(t,\"left\",0)),e.scrollbarYActive?t.classList.add(\"ps--active-y\"):(t.classList.remove(\"ps--active-y\"),e.scrollbarYHeight=0,e.scrollbarYTop=0,a(t,\"top\",0))}},function(t,e,r){\"use strict\";function o(t){var e,r=[\"ps--in-scrolling\"];return e=void 0===t?[\"ps--x\",\"ps--y\"]:[\"ps--\"+t],r.concat(e)}var n=r(4),i=e.toInt=function(t){return parseInt(t,10)||0};e.isEditable=function(t){return n.matches(t,\"input,[contenteditable]\")||n.matches(t,\"select,[contenteditable]\")||n.matches(t,\"textarea,[contenteditable]\")||n.matches(t,\"button,[contenteditable]\")},e.removePsClasses=function(t){for(var e=0;e<t.classList.length;e++){var r=t.classList[e];0===r.indexOf(\"ps-\")&&t.classList.remove(r)}},e.outerWidth=function(t){return i(n.css(t,\"width\"))+i(n.css(t,\"paddingLeft\"))+i(n.css(t,\"paddingRight\"))+i(n.css(t,\"borderLeftWidth\"))+i(n.css(t,\"borderRightWidth\"))},e.startScrolling=function(t,e){for(var r=o(e),n=0;n<r.length;n++)t.classList.add(r[n])},e.stopScrolling=function(t,e){for(var r=o(e),n=0;n<r.length;n++)t.classList.remove(r[n])},e.env={isWebKit:\"undefined\"!=typeof document&&\"WebkitAppearance\"in document.documentElement.style,supportsTouch:\"undefined\"!=typeof window&&(\"ontouchstart\"in window||window.DocumentTouch&&document instanceof window.DocumentTouch),supportsIePointer:\"undefined\"!=typeof window&&null!==window.navigator.msMaxTouchPoints}},function(t,e,r){\"use strict\";var o=r(0),n=function(t){var e=document.createEvent(\"Event\");return e.initEvent(t,!0,!0),e};t.exports=function(t,e,r){if(void 0===t)throw\"You must provide an element to the update-scroll function\";if(void 0===e)throw\"You must provide an axis to the update-scroll function\";if(void 0===r)throw\"You must provide a value to the update-scroll function\";\"top\"===e&&r<=0&&(t.scrollTop=r=0,t.dispatchEvent(n(\"ps-y-reach-start\"))),\"left\"===e&&r<=0&&(t.scrollLeft=r=0,t.dispatchEvent(n(\"ps-x-reach-start\")));var i=o.get(t);\"top\"===e&&r>=i.contentHeight-i.containerHeight&&(r=i.contentHeight-i.containerHeight,r-t.scrollTop<=2?r=t.scrollTop:t.scrollTop=r,t.dispatchEvent(n(\"ps-y-reach-end\"))),\"left\"===e&&r>=i.contentWidth-i.containerWidth&&(r=i.contentWidth-i.containerWidth,r-t.scrollLeft<=2?r=t.scrollLeft:t.scrollLeft=r,t.dispatchEvent(n(\"ps-x-reach-end\"))),void 0===i.lastTop&&(i.lastTop=t.scrollTop),void 0===i.lastLeft&&(i.lastLeft=t.scrollLeft),\"top\"===e&&r<i.lastTop&&t.dispatchEvent(n(\"ps-scroll-up\")),\"top\"===e&&r>i.lastTop&&t.dispatchEvent(n(\"ps-scroll-down\")),\"left\"===e&&r<i.lastLeft&&t.dispatchEvent(n(\"ps-scroll-left\")),\"left\"===e&&r>i.lastLeft&&t.dispatchEvent(n(\"ps-scroll-right\")),\"top\"===e&&r!==i.lastTop&&(t.scrollTop=i.lastTop=r,t.dispatchEvent(n(\"ps-scroll-y\"))),\"left\"===e&&r!==i.lastLeft&&(t.scrollLeft=i.lastLeft=r,t.dispatchEvent(n(\"ps-scroll-x\")))}},function(t,e,r){\"use strict\";function o(t,e){return window.getComputedStyle(t)[e]}function n(t,e,r){return\"number\"==typeof r&&(r=r.toString()+\"px\"),t.style[e]=r,t}function i(t,e){for(var r in e){var o=e[r];\"number\"==typeof o&&(o=o.toString()+\"px\"),t.style[r]=o}return t}var l={};l.create=function(t,e){var r=document.createElement(t);return r.className=e,r},l.appendTo=function(t,e){return e.appendChild(t),t},l.css=function(t,e,r){return\"object\"==typeof e?i(t,e):void 0===r?o(t,e):n(t,e,r)},l.matches=function(t,e){return void 0!==t.matches?t.matches(e):t.msMatchesSelector(e)},l.remove=function(t){void 0!==t.remove?t.remove():t.parentNode&&t.parentNode.removeChild(t)},l.queryChildren=function(t,e){return Array.prototype.filter.call(t.childNodes,function(t){return l.matches(t,e)})},t.exports=l},function(t,e,r){r(28);var o=r(25)(r(7),r(26),null,null);t.exports=o.exports},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=r(5),n=r.n(o);e.default=n.a},function(t,e,r){\"use strict\";Object.defineProperty(e,\"__esModule\",{value:!0});var o=r(10),n=r.n(o);e.default={name:\"vue-perfect-scrollbar\",props:{settings:{default:void 0},swicher:{type:Boolean,default:!0},tagname:{type:String,default:\"section\"}},methods:{scrollHanle:function(t){this.$emit(t.type,t)},update:function(){n.a.update(this.$el)},__init:function(){this.swicher&&(this._ps_inited?this.update(this.$el):(this._ps_inited=!0,n.a.initialize(this.$el,this.settings)))},__uninit:function(){n.a.destroy(this.$el),this._ps_inited=!1}},watch:{swicher:function(t){t&&!this._ps_inited&&this.__init(),!t&&this._ps_inited&&this.__uninit()},$route:function(){this.update()}},mounted:function(){this.__init()},updated:function(){this.$nextTick(this.update)},activated:function(){this.__init()},deactivated:function(){this.__uninit()},beforeDestroy:function(){this.__uninit()}}},function(t,e,r){e=t.exports=r(9)(),e.push([t.i,\".ps{-ms-touch-action:auto;touch-action:auto;overflow:hidden!important;-ms-overflow-style:none}@supports (-ms-overflow-style:none){.ps{overflow:auto!important}}@media (-ms-high-contrast:none),screen and (-ms-high-contrast:active){.ps{overflow:auto!important}}.ps.ps--active-x>.ps__scrollbar-x-rail,.ps.ps--active-y>.ps__scrollbar-y-rail{display:block;background-color:transparent}.ps.ps--in-scrolling.ps--x>.ps__scrollbar-x-rail{background-color:#eee;opacity:.9}.ps.ps--in-scrolling.ps--x>.ps__scrollbar-x-rail>.ps__scrollbar-x{background-color:#999;height:11px}.ps.ps--in-scrolling.ps--y>.ps__scrollbar-y-rail{background-color:#eee;opacity:.9}.ps.ps--in-scrolling.ps--y>.ps__scrollbar-y-rail>.ps__scrollbar-y{background-color:#999;width:11px}.ps>.ps__scrollbar-x-rail{display:none;position:absolute;opacity:0;transition:background-color .2s linear,opacity .2s linear;bottom:0;height:15px}.ps>.ps__scrollbar-x-rail>.ps__scrollbar-x{position:absolute;background-color:#aaa;border-radius:6px;transition:background-color .2s linear,height .2s linear,width .2s ease-in-out,border-radius .2s ease-in-out;bottom:2px;height:6px}.ps>.ps__scrollbar-x-rail:active>.ps__scrollbar-x,.ps>.ps__scrollbar-x-rail:hover>.ps__scrollbar-x{height:11px}.ps>.ps__scrollbar-y-rail{display:none;position:absolute;opacity:0;transition:background-color .2s linear,opacity .2s linear;right:0;width:15px}.ps>.ps__scrollbar-y-rail>.ps__scrollbar-y{position:absolute;background-color:#aaa;border-radius:6px;transition:background-color .2s linear,height .2s linear,width .2s ease-in-out,border-radius .2s ease-in-out;right:2px;width:6px}.ps>.ps__scrollbar-y-rail:active>.ps__scrollbar-y,.ps>.ps__scrollbar-y-rail:hover>.ps__scrollbar-y{width:11px}.ps:hover.ps--in-scrolling.ps--x>.ps__scrollbar-x-rail{background-color:#eee;opacity:.9}.ps:hover.ps--in-scrolling.ps--x>.ps__scrollbar-x-rail>.ps__scrollbar-x{background-color:#999;height:11px}.ps:hover.ps--in-scrolling.ps--y>.ps__scrollbar-y-rail{background-color:#eee;opacity:.9}.ps:hover.ps--in-scrolling.ps--y>.ps__scrollbar-y-rail>.ps__scrollbar-y{background-color:#999;width:11px}.ps:hover>.ps__scrollbar-x-rail,.ps:hover>.ps__scrollbar-y-rail{opacity:.6}.ps:hover>.ps__scrollbar-x-rail:hover{background-color:#eee;opacity:.9}.ps:hover>.ps__scrollbar-x-rail:hover>.ps__scrollbar-x{background-color:#999}.ps:hover>.ps__scrollbar-y-rail:hover{background-color:#eee;opacity:.9}.ps:hover>.ps__scrollbar-y-rail:hover>.ps__scrollbar-y{background-color:#999}.ps-container{position:relative}\",\"\"])},function(t,e){t.exports=function(){var t=[];return t.toString=function(){for(var t=[],e=0;e<this.length;e++){var r=this[e];r[2]?t.push(\"@media \"+r[2]+\"{\"+r[1]+\"}\"):t.push(r[1])}return t.join(\"\")},t.i=function(e,r){\"string\"==typeof e&&(e=[[null,e,\"\"]]);for(var o={},n=0;n<this.length;n++){var i=this[n][0];\"number\"==typeof i&&(o[i]=!0)}for(n=0;n<e.length;n++){var l=e[n];\"number\"==typeof l[0]&&o[l[0]]||(r&&!l[2]?l[2]=r:r&&(l[2]=\"(\"+l[2]+\") and (\"+r+\")\"),t.push(l))}},t}},function(t,e,r){\"use strict\";t.exports=r(13)},function(t,e,r){\"use strict\";var o=function(t){this.element=t,this.events={}};o.prototype.bind=function(t,e){void 0===this.events[t]&&(this.events[t]=[]),this.events[t].push(e),this.element.addEventListener(t,e,!1)},o.prototype.unbind=function(t,e){var r=void 0!==e;this.events[t]=this.events[t].filter(function(o){return!(!r||o===e)||(this.element.removeEventListener(t,o,!1),!1)},this)},o.prototype.unbindAll=function(){for(var t in this.events)this.unbind(t)};var n=function(){this.eventElements=[]};n.prototype.eventElement=function(t){var e=this.eventElements.filter(function(e){return e.element===t})[0];return void 0===e&&(e=new o(t),this.eventElements.push(e)),e},n.prototype.bind=function(t,e,r){this.eventElement(t).bind(e,r)},n.prototype.unbind=function(t,e,r){this.eventElement(t).unbind(e,r)},n.prototype.unbindAll=function(){for(var t=0;t<this.eventElements.length;t++)this.eventElements[t].unbindAll()},n.prototype.once=function(t,e,r){var o=this.eventElement(t),n=function(t){o.unbind(e,n),r(t)};o.bind(e,n)},t.exports=n},function(t,e,r){\"use strict\";t.exports=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return t()+t()+\"-\"+t()+\"-\"+t()+\"-\"+t()+\"-\"+t()+t()+t()}}()},function(t,e,r){\"use strict\";var o=r(15),n=r(23),i=r(24);t.exports={initialize:n,update:i,destroy:o}},function(t,e,r){\"use strict\";t.exports=function(){return{handlers:[\"click-rail\",\"drag-scrollbar\",\"keyboard\",\"wheel\",\"touch\"],maxScrollbarLength:null,minScrollbarLength:null,scrollXMarginOffset:0,scrollYMarginOffset:0,suppressScrollX:!1,suppressScrollY:!1,swipePropagation:!0,swipeEasing:!0,useBothWheelAxes:!1,wheelPropagation:!1,wheelSpeed:1,theme:\"default\"}}},function(t,e,r){\"use strict\";var o=r(2),n=r(4),i=r(0);t.exports=function(t){var e=i.get(t);e&&(e.event.unbindAll(),n.remove(e.scrollbarX),n.remove(e.scrollbarY),n.remove(e.scrollbarXRail),n.remove(e.scrollbarYRail),o.removePsClasses(t),i.remove(t))}},function(t,e,r){\"use strict\";function o(t,e){function r(t){return t.getBoundingClientRect()}var o=function(t){t.stopPropagation()};e.event.bind(e.scrollbarY,\"click\",o),e.event.bind(e.scrollbarYRail,\"click\",function(o){var n=o.pageY-window.pageYOffset-r(e.scrollbarYRail).top,s=n>e.scrollbarYTop?1:-1;l(t,\"top\",t.scrollTop+s*e.containerHeight),i(t),o.stopPropagation()}),e.event.bind(e.scrollbarX,\"click\",o),e.event.bind(e.scrollbarXRail,\"click\",function(o){var n=o.pageX-window.pageXOffset-r(e.scrollbarXRail).left,s=n>e.scrollbarXLeft?1:-1;l(t,\"left\",t.scrollLeft+s*e.containerWidth),i(t),o.stopPropagation()})}var n=r(0),i=r(1),l=r(3);t.exports=function(t){o(t,n.get(t))}},function(t,e,r){\"use strict\";function o(t,e){function r(r){var n=o+r*e.railXRatio,l=Math.max(0,e.scrollbarXRail.getBoundingClientRect().left)+e.railXRatio*(e.railXWidth-e.scrollbarXWidth);e.scrollbarXLeft=n<0?0:n>l?l:n;var s=i.toInt(e.scrollbarXLeft*(e.contentWidth-e.containerWidth)/(e.containerWidth-e.railXRatio*e.scrollbarXWidth))-e.negativeScrollAdjustment;c(t,\"left\",s)}var o=null,n=null,s=function(e){r(e.pageX-n),a(t),e.stopPropagation(),e.preventDefault()},u=function(){i.stopScrolling(t,\"x\"),e.event.unbind(e.ownerDocument,\"mousemove\",s)};e.event.bind(e.scrollbarX,\"mousedown\",function(r){n=r.pageX,o=i.toInt(l.css(e.scrollbarX,\"left\"))*e.railXRatio,i.startScrolling(t,\"x\"),e.event.bind(e.ownerDocument,\"mousemove\",s),e.event.once(e.ownerDocument,\"mouseup\",u),r.stopPropagation(),r.preventDefault()})}function n(t,e){function r(r){var n=o+r*e.railYRatio,l=Math.max(0,e.scrollbarYRail.getBoundingClientRect().top)+e.railYRatio*(e.railYHeight-e.scrollbarYHeight);e.scrollbarYTop=n<0?0:n>l?l:n;var s=i.toInt(e.scrollbarYTop*(e.contentHeight-e.containerHeight)/(e.containerHeight-e.railYRatio*e.scrollbarYHeight));c(t,\"top\",s)}var o=null,n=null,s=function(e){r(e.pageY-n),a(t),e.stopPropagation(),e.preventDefault()},u=function(){i.stopScrolling(t,\"y\"),e.event.unbind(e.ownerDocument,\"mousemove\",s)};e.event.bind(e.scrollbarY,\"mousedown\",function(r){n=r.pageY,o=i.toInt(l.css(e.scrollbarY,\"top\"))*e.railYRatio,i.startScrolling(t,\"y\"),e.event.bind(e.ownerDocument,\"mousemove\",s),e.event.once(e.ownerDocument,\"mouseup\",u),r.stopPropagation(),r.preventDefault()})}var i=r(2),l=r(4),s=r(0),a=r(1),c=r(3);t.exports=function(t){var e=s.get(t);o(t,e),n(t,e)}},function(t,e,r){\"use strict\";function o(t,e){function r(r,o){var n=t.scrollTop;if(0===r){if(!e.scrollbarYActive)return!1;if(0===n&&o>0||n>=e.contentHeight-e.containerHeight&&o<0)return!e.settings.wheelPropagation}var i=t.scrollLeft;if(0===o){if(!e.scrollbarXActive)return!1;if(0===i&&r<0||i>=e.contentWidth-e.containerWidth&&r>0)return!e.settings.wheelPropagation}return!0}var o=!1;e.event.bind(t,\"mouseenter\",function(){o=!0}),e.event.bind(t,\"mouseleave\",function(){o=!1});var l=!1;e.event.bind(e.ownerDocument,\"keydown\",function(c){if(!(c.isDefaultPrevented&&c.isDefaultPrevented()||c.defaultPrevented)){var u=i.matches(e.scrollbarX,\":focus\")||i.matches(e.scrollbarY,\":focus\");if(o||u){var p=document.activeElement?document.activeElement:e.ownerDocument.activeElement;if(p){if(\"IFRAME\"===p.tagName)p=p.contentDocument.activeElement;else for(;p.shadowRoot;)p=p.shadowRoot.activeElement;if(n.isEditable(p))return}var d=0,f=0;switch(c.which){case 37:d=c.metaKey?-e.contentWidth:c.altKey?-e.containerWidth:-30;break;case 38:f=c.metaKey?e.contentHeight:c.altKey?e.containerHeight:30;break;case 39:d=c.metaKey?e.contentWidth:c.altKey?e.containerWidth:30;break;case 40:f=c.metaKey?-e.contentHeight:c.altKey?-e.containerHeight:-30;break;case 33:f=90;break;case 32:f=c.shiftKey?90:-90;break;case 34:f=-90;break;case 35:f=c.ctrlKey?-e.contentHeight:-e.containerHeight;break;case 36:f=c.ctrlKey?t.scrollTop:e.containerHeight;break;default:return}a(t,\"top\",t.scrollTop-f),a(t,\"left\",t.scrollLeft+d),s(t),l=r(d,f),l&&c.preventDefault()}}})}var n=r(2),i=r(4),l=r(0),s=r(1),a=r(3);t.exports=function(t){o(t,l.get(t))}},function(t,e,r){\"use strict\";function o(t,e){function r(r,o){var n=t.scrollTop;if(0===r){if(!e.scrollbarYActive)return!1;if(0===n&&o>0||n>=e.contentHeight-e.containerHeight&&o<0)return!e.settings.wheelPropagation}var i=t.scrollLeft;if(0===o){if(!e.scrollbarXActive)return!1;if(0===i&&r<0||i>=e.contentWidth-e.containerWidth&&r>0)return!e.settings.wheelPropagation}return!0}function o(t){var e=t.deltaX,r=-1*t.deltaY;return void 0!==e&&void 0!==r||(e=-1*t.wheelDeltaX/6,r=t.wheelDeltaY/6),t.deltaMode&&1===t.deltaMode&&(e*=10,r*=10),e!==e&&r!==r&&(e=0,r=t.wheelDelta),t.shiftKey?[-r,-e]:[e,r]}function n(e,r){var o=t.querySelector(\"textarea:hover, select[multiple]:hover, .ps-child:hover\");if(o){var n=window.getComputedStyle(o);if(![n.overflow,n.overflowX,n.overflowY].join(\"\").match(/(scroll|auto)/))return!1;var i=o.scrollHeight-o.clientHeight;if(i>0&&!(0===o.scrollTop&&r>0||o.scrollTop===i&&r<0))return!0;var l=o.scrollLeft-o.clientWidth;if(l>0&&!(0===o.scrollLeft&&e<0||o.scrollLeft===l&&e>0))return!0}return!1}function s(s){var c=o(s),u=c[0],p=c[1];n(u,p)||(a=!1,e.settings.useBothWheelAxes?e.scrollbarYActive&&!e.scrollbarXActive?(p?l(t,\"top\",t.scrollTop-p*e.settings.wheelSpeed):l(t,\"top\",t.scrollTop+u*e.settings.wheelSpeed),a=!0):e.scrollbarXActive&&!e.scrollbarYActive&&(u?l(t,\"left\",t.scrollLeft+u*e.settings.wheelSpeed):l(t,\"left\",t.scrollLeft-p*e.settings.wheelSpeed),a=!0):(l(t,\"top\",t.scrollTop-p*e.settings.wheelSpeed),l(t,\"left\",t.scrollLeft+u*e.settings.wheelSpeed)),i(t),(a=a||r(u,p))&&(s.stopPropagation(),s.preventDefault()))}var a=!1;void 0!==window.onwheel?e.event.bind(t,\"wheel\",s):void 0!==window.onmousewheel&&e.event.bind(t,\"mousewheel\",s)}var n=r(0),i=r(1),l=r(3);t.exports=function(t){o(t,n.get(t))}},function(t,e,r){\"use strict\";function o(t,e){e.event.bind(t,\"scroll\",function(){i(t)})}var n=r(0),i=r(1);t.exports=function(t){o(t,n.get(t))}},function(t,e,r){\"use strict\";function o(t,e){function r(){var t=window.getSelection?window.getSelection():document.getSelection?document.getSelection():\"\";return 0===t.toString().length?null:t.getRangeAt(0).commonAncestorContainer}function o(){c||(c=setInterval(function(){if(!i.get(t))return void clearInterval(c);s(t,\"top\",t.scrollTop+u.top),s(t,\"left\",t.scrollLeft+u.left),l(t)},50))}function a(){c&&(clearInterval(c),c=null),n.stopScrolling(t)}var c=null,u={top:0,left:0},p=!1;e.event.bind(e.ownerDocument,\"selectionchange\",function(){t.contains(r())?p=!0:(p=!1,a())}),e.event.bind(window,\"mouseup\",function(){p&&(p=!1,a())}),e.event.bind(window,\"keyup\",function(){p&&(p=!1,a())}),e.event.bind(window,\"mousemove\",function(e){if(p){var r={x:e.pageX,y:e.pageY},i={left:t.offsetLeft,right:t.offsetLeft+t.offsetWidth,top:t.offsetTop,bottom:t.offsetTop+t.offsetHeight};r.x<i.left+3?(u.left=-5,n.startScrolling(t,\"x\")):r.x>i.right-3?(u.left=5,n.startScrolling(t,\"x\")):u.left=0,r.y<i.top+3?(u.top=i.top+3-r.y<5?-5:-20,n.startScrolling(t,\"y\")):r.y>i.bottom-3?(u.top=r.y-i.bottom+3<5?5:20,n.startScrolling(t,\"y\")):u.top=0,0===u.top&&0===u.left?a():o()}})}var n=r(2),i=r(0),l=r(1),s=r(3);t.exports=function(t){o(t,i.get(t))}},function(t,e,r){\"use strict\";function o(t,e,r,o){function n(r,o){var n=t.scrollTop,i=t.scrollLeft,l=Math.abs(r),s=Math.abs(o);if(s>l){if(o<0&&n===e.contentHeight-e.containerHeight||o>0&&0===n)return!e.settings.swipePropagation}else if(l>s&&(r<0&&i===e.contentWidth-e.containerWidth||r>0&&0===i))return!e.settings.swipePropagation;return!0}function a(e,r){s(t,\"top\",t.scrollTop-r),s(t,\"left\",t.scrollLeft-e),l(t)}function c(){w=!0}function u(){w=!1}function p(t){return t.targetTouches?t.targetTouches[0]:t}function d(t){return(!t.pointerType||\"pen\"!==t.pointerType||0!==t.buttons)&&(!(!t.targetTouches||1!==t.targetTouches.length)||!(!t.pointerType||\"mouse\"===t.pointerType||t.pointerType===t.MSPOINTER_TYPE_MOUSE))}function f(t){if(d(t)){_=!0;var e=p(t);b.pageX=e.pageX,b.pageY=e.pageY,g=(new Date).getTime(),null!==y&&clearInterval(y),t.stopPropagation()}}function h(t){if(!_&&e.settings.swipePropagation&&f(t),!w&&_&&d(t)){var r=p(t),o={pageX:r.pageX,pageY:r.pageY},i=o.pageX-b.pageX,l=o.pageY-b.pageY;a(i,l),b=o;var s=(new Date).getTime(),c=s-g;c>0&&(m.x=i/c,m.y=l/c,g=s),n(i,l)&&(t.stopPropagation(),t.preventDefault())}}function v(){!w&&_&&(_=!1,e.settings.swipeEasing&&(clearInterval(y),y=setInterval(function(){return i.get(t)&&(m.x||m.y)?Math.abs(m.x)<.01&&Math.abs(m.y)<.01?void clearInterval(y):(a(30*m.x,30*m.y),m.x*=.8,void(m.y*=.8)):void clearInterval(y)},10)))}var b={},g=0,m={},y=null,w=!1,_=!1;r?(e.event.bind(window,\"touchstart\",c),e.event.bind(window,\"touchend\",u),e.event.bind(t,\"touchstart\",f),e.event.bind(t,\"touchmove\",h),e.event.bind(t,\"touchend\",v)):o&&(window.PointerEvent?(e.event.bind(window,\"pointerdown\",c),e.event.bind(window,\"pointerup\",u),e.event.bind(t,\"pointerdown\",f),e.event.bind(t,\"pointermove\",h),e.event.bind(t,\"pointerup\",v)):window.MSPointerEvent&&(e.event.bind(window,\"MSPointerDown\",c),e.event.bind(window,\"MSPointerUp\",u),e.event.bind(t,\"MSPointerDown\",f),e.event.bind(t,\"MSPointerMove\",h),e.event.bind(t,\"MSPointerUp\",v)))}var n=r(2),i=r(0),l=r(1),s=r(3);t.exports=function(t){if(n.env.supportsTouch||n.env.supportsIePointer){o(t,i.get(t),n.env.supportsTouch,n.env.supportsIePointer)}}},function(t,e,r){\"use strict\";var o=r(0),n=r(1),i={\"click-rail\":r(16),\"drag-scrollbar\":r(17),keyboard:r(18),wheel:r(19),touch:r(22),selection:r(21)},l=r(20);t.exports=function(t,e){t.classList.add(\"ps\");var r=o.add(t,\"object\"==typeof e?e:{});t.classList.add(\"ps--theme_\"+r.settings.theme),r.settings.handlers.forEach(function(e){i[e](t)}),l(t),n(t)}},function(t,e,r){\"use strict\";var o=r(2),n=r(4),i=r(0),l=r(1),s=r(3);t.exports=function(t){var e=i.get(t);e&&(e.negativeScrollAdjustment=e.isNegativeScroll?t.scrollWidth-t.clientWidth:0,n.css(e.scrollbarXRail,\"display\",\"block\"),n.css(e.scrollbarYRail,\"display\",\"block\"),e.railXMarginWidth=o.toInt(n.css(e.scrollbarXRail,\"marginLeft\"))+o.toInt(n.css(e.scrollbarXRail,\"marginRight\")),e.railYMarginHeight=o.toInt(n.css(e.scrollbarYRail,\"marginTop\"))+o.toInt(n.css(e.scrollbarYRail,\"marginBottom\")),n.css(e.scrollbarXRail,\"display\",\"none\"),n.css(e.scrollbarYRail,\"display\",\"none\"),l(t),s(t,\"top\",t.scrollTop),s(t,\"left\",t.scrollLeft),n.css(e.scrollbarXRail,\"display\",\"\"),n.css(e.scrollbarYRail,\"display\",\"\"))}},function(t,e){t.exports=function(t,e,r,o){var n,i=t=t||{},l=typeof t.default;\"object\"!==l&&\"function\"!==l||(n=t,i=t.default);var s=\"function\"==typeof i?i.options:i;if(e&&(s.render=e.render,s.staticRenderFns=e.staticRenderFns),r&&(s._scopeId=r),o){var a=s.computed||(s.computed={});Object.keys(o).forEach(function(t){var e=o[t];a[t]=function(){return e}})}return{esModule:n,exports:i,options:s}}},function(t,e){t.exports={render:function(){var t=this,e=t.$createElement;return(t._self._c||e)(t.$props.tagname,{tag:\"section\",staticClass:\"ps-container\",on:{\"~mouseover\":function(e){t.update(e)},\"ps-scroll-y\":t.scrollHanle,\"ps-scroll-x\":t.scrollHanle,\"ps-scroll-up\":t.scrollHanle,\"ps-scroll-down\":t.scrollHanle,\"ps-scroll-left\":t.scrollHanle,\"ps-scroll-right\":t.scrollHanle,\"ps-y-reach-start\":t.scrollHanle,\"ps-y-reach-end\":t.scrollHanle,\"ps-x-reach-start\":t.scrollHanle,\"ps-x-reach-end\":t.scrollHanle}},[t._t(\"default\")],2)},staticRenderFns:[]}},function(t,e){function r(t,e){for(var r=0;r<t.length;r++){var o=t[r],n=u[o.id];if(n){n.refs++;for(var i=0;i<n.parts.length;i++)n.parts[i](o.parts[i]);for(;i<o.parts.length;i++)n.parts.push(s(o.parts[i],e))}else{for(var l=[],i=0;i<o.parts.length;i++)l.push(s(o.parts[i],e));u[o.id]={id:o.id,refs:1,parts:l}}}}function o(t){for(var e=[],r={},o=0;o<t.length;o++){var n=t[o],i=n[0],l=n[1],s=n[2],a=n[3],c={css:l,media:s,sourceMap:a};r[i]?r[i].parts.push(c):e.push(r[i]={id:i,parts:[c]})}return e}function n(t,e){var r=f(),o=b[b.length-1];if(\"top\"===t.insertAt)o?o.nextSibling?r.insertBefore(e,o.nextSibling):r.appendChild(e):r.insertBefore(e,r.firstChild),b.push(e);else{if(\"bottom\"!==t.insertAt)throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");r.appendChild(e)}}function i(t){t.parentNode.removeChild(t);var e=b.indexOf(t);e>=0&&b.splice(e,1)}function l(t){var e=document.createElement(\"style\");return e.type=\"text/css\",n(t,e),e}function s(t,e){var r,o,n;if(e.singleton){var s=v++;r=h||(h=l(e)),o=a.bind(null,r,s,!1),n=a.bind(null,r,s,!0)}else r=l(e),o=c.bind(null,r),n=function(){i(r)};return o(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;o(t=e)}else n()}}function a(t,e,r,o){var n=r?\"\":o.css;if(t.styleSheet)t.styleSheet.cssText=g(e,n);else{var i=document.createTextNode(n),l=t.childNodes;l[e]&&t.removeChild(l[e]),l.length?t.insertBefore(i,l[e]):t.appendChild(i)}}function c(t,e){var r=e.css,o=e.media,n=e.sourceMap;if(o&&t.setAttribute(\"media\",o),n&&(r+=\"\\n/*# sourceURL=\"+n.sources[0]+\" */\",r+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+\" */\"),t.styleSheet)t.styleSheet.cssText=r;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(r))}}var u={},p=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}},d=p(function(){return/msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase())}),f=p(function(){return document.head||document.getElementsByTagName(\"head\")[0]}),h=null,v=0,b=[];t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");e=e||{},void 0===e.singleton&&(e.singleton=d()),void 0===e.insertAt&&(e.insertAt=\"bottom\");var n=o(t);return r(n,e),function(t){for(var i=[],l=0;l<n.length;l++){var s=n[l],a=u[s.id];a.refs--,i.push(a)}if(t){r(o(t),e)}for(var l=0;l<i.length;l++){var a=i[l];if(0===a.refs){for(var c=0;c<a.parts.length;c++)a.parts[c]();delete u[a.id]}}}};var g=function(){var t=[];return function(e,r){return t[e]=r,t.filter(Boolean).join(\"\\n\")}}()},function(t,e,r){var o=r(8);\"string\"==typeof o&&(o=[[t.i,o,\"\"]]);r(27)(o,{});o.locals&&(t.exports=o.locals)}]);\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/vue-perfect-scrollbar/dist/index.js\n");

/***/ })

}]);