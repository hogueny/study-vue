{"version":3,"sources":["webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/vue-chartjs/es/mixins/index.js","webpack:///./node_modules/vue-chartjs/es/BaseCharts.js","webpack:///./node_modules/vue-chartjs/es/index.js","webpack:///./node_modules/@coreui/coreui-plugin-chartjs-custom-tooltips/dist/umd/custom-tooltips.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.animations.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/color-convert/conversions.js","webpack:///./node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","drawLegendBox","x","y","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","resolve","inputs","context","ilen","undefined","currentStep","numSteps","easing","render","onAnimationProgress","onAnimationComplete","Object","defineProperty","prototype","get","set","scope","values","merge","showLines","spanGaps","hover","mode","scales","xAxes","yAxes","Chart","lineEnabled","showLine","controllers","DatasetController","datasetElementType","Line","dataElementType","Point","reset","custom","getMeta","points","lineElementOptions","scale","getScaleForId","yAxisID","getDataset","tension","lineTension","_scale","_datasetIndex","_children","_model","fill","steppedLine","stepped","cubicInterpolationMode","pivot","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","rotation","yScale","xScale","xAxisID","pointOptions","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","ds","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","Number","getRightValue","rightValue","model","controlPoints","area","chartArea","capControlPoint","pt","min","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","halfBorderWidth","clipArea","unclipArea","setHoverStyle","element","$previousStyle","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","hoverRadius","pointHoverRadius","acquireContext","getContext","generateChart","chartId","chartType","createElement","style","styles","class","cssClasses","attrs","ref","props","default","String","plugins","Array","_chart","_plugins","methods","addPlugin","plugin","$data","generateLegend","renderChart","destroy","chart_default","a","$refs","beforeDestroy","Bar","Doughnut","Pie","PolarArea","Radar","d","__webpack_exports__","factory","CustomTooltips","tooltipModel","_this","_setCanvasId","_idMaker","_hex","_multiplier","random","toString","_canvasId","ClassName","ABOVE","BELOW","CHARTJS_TOOLTIP","NO_TRANSFORM","TOOLTIP_BODY","TOOLTIP_BODY_ITEM","TOOLTIP_BODY_ITEM_COLOR","TOOLTIP_BODY_ITEM_LABEL","TOOLTIP_BODY_ITEM_VALUE","TOOLTIP_HEADER","TOOLTIP_HEADER_ITEM","Selector","DIV","SPAN","TOOLTIP","tooltip","document","getElementById","className","parentNode","appendChild","opacity","classList","remove","yAlign","add","body","titleLines","title","tooltipHeader","forEach","tooltipHeaderTitle","innerHTML","tooltipBody","tooltipBodyItems","lines","tooltipBodyItem","colors","labelColors","tooltipBodyItemColor","split","tooltipBodyItemLabel","tooltipBodyItemValue","pop","_tooltipBodyItemValue","positionY","offsetTop","positionX","offsetLeft","caretX","caretY","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","key","method","charAt","toUpperCase","slice","base","args","arguments","res","apply","object","unlistenArrayEvents","stub","indexOf","splice","linkScales","addElements","updateIndex","scaleID","_data","createMetaDataset","createMetaData","metaData","addElementAndReset","buildOrUpdateElements","resyncElements","transition","easingValue","removeHoverStyle","numMeta","numData","insertElements","start","count","onDataPush","onDataPop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","color","interpolate","view","ease","actual","origin","target","c0","c1","keys","hasOwnProperty","valid","mix","rgbString","isFinite","configuration","_view","clone","_start","tooltipPosition","hasValue","isNumber","xRange","mouseX","vm","abs","yRange","mouseY","inRange","pow","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","PI","errMargin","Bubble","moment","window","Scale","scaleService","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","items","hash","out","buildLookupTable","timestamps","distribution","time","pos","prev","curr","table","round","lookup","mid","i0","i1","lo","hi","skey","sval","tkey","range","span","ratio","offset","momentify","parser","format","isValid","parse","input","isNullOrUndef","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","ticks","duration","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","last","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Error","mergeTicksOptions","console","warn","rawValue","determineDataLimits","j","jlen","timestamp","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","cos","sinRotation","sin","tickFontSize","exampleTime","exampleLabel","innerWidth","floor","registerScaleType","clear","clearRect","roundedRect","epsilon","arcTo","closePath","rect","edgeLength","xOffset","yOffset","drawImage","translate","rotate","arc","sqrt","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","Scatter","uid","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","v0","v1","klen","k","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","globalDefaults","current","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","_cacheId","register","p","concat","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","Animation","animationService","Interaction","platform","Ticks","Tooltip","Title","pluginService","PluginBase","canvasHelpers","layoutService","animation","animateRotate","animateScale","arcOpts","bw","cutoutPercentage","circumference","tooltips","callbacks","tooltipItem","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","calculateCircumference","elementOpts","arcs","hoverWidth","chartX","chartY","pointRelativePosition","getAngleFromPoint","distance","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","formatters","linear","LinearScale","LinearScaleBase","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","maxTicks","maxTicksLimit","handleDirectionalChanges","innerDimension","ticksAsNumbers","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","logarithmic","LogarithmicScale","tickValues","_getFirstTickValue","sign","firstTickValue","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","gridLines","offsetGridLines","axis","rectangle","borderSkipped","yLabel","datasetLabel","xLabel","bar","Rectangle","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","name","imeta","ivalue","controller","stackIndex","maxBarThickness","Infinity","horizontalBar","radar","pointElementOptions","pointPosition","getPointPositionForValue","xCenter","yCenter","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","dataIndex","labelsFromTicks","getLineValue","lineValue","computeTextSize","longestText","parseFontOptions","family","parseLineHeight","lineHeight","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","mirror","autoSkipPadding","labelOffset","getPadding","_ticks","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","optionMajorTicks","isRotated","tickFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","y2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","filterByPosition","where","v","sortByWeight","_tmpIndex_","boxes","layoutItem","prop","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","box","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","tickValue","delta","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","remain","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","filler","colorNames","getRgba","string","abbr","hex","rgba","per","keyword","rgb","parseInt","parseFloat","getHsla","hsl","alpha","h","s","getHwb","hwb","w","getRgb","getHsl","hsla","getAlpha","vals","hexString","hexDouble","rgbaString","percentString","percentaString","g","hslString","hslaString","hwbString","reverseNames","num","str","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","modes","single","x-axis","nearest","sizeA","sizeB","ret","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","n","almostEquals","almostWhole","rounded","reduce","NEGATIVE_INFINITY","exponent","log","LOG10E","powerOf10","isPowerOf10","degrees","toDegrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","atan2","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","error","colorValue","CanvasPattern","saturate","darken","spacing","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","cls","maxSize","cssText","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","unwatchForRender","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","createTextNode","keyframes","removeAttribute","proxies","addEvent","removeEvent","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","c","m","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","z","rgb2lab","xyz","rgb2lch","lab2lch","hsl2rgb","t1","t2","t3","val","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","f","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","wh","bl","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","hr","lab2rgb","lch2lab","lch","lch2xyz","lch2rgb","keyword2rgb","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","conversions","convert","Converter","func","arg","pair","exec","from","to","convs","routeSpace","space","getValues","setValues","fspace","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","afterDatasetsUpdate","$filler","beforeDatasetDraw","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","tp","mergeOpacity","colorString","pushOrConcat","toPush","splitNewlines","createTooltipItem","getBaseModel","tooltipOpts","xAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","combinedBodyLength","bodyItem","before","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getBeforeAfterBodyLines","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","animationDuration","construct","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","scatter","angleLines","circular","pointLabels","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","bindEvents","resize","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset"],"mappings":"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","file":"js/chunk-6f634880.59c7609d.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","function dataHandler(newData, oldData) {\n  if (oldData) {\n    var chart = this.$data._chart;\n    var newDatasetLabels = newData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldDatasetLabels = oldData.datasets.map(function (dataset) {\n      return dataset.label;\n    });\n    var oldLabels = JSON.stringify(oldDatasetLabels);\n    var newLabels = JSON.stringify(newDatasetLabels);\n\n    if (newLabels === oldLabels && oldData.datasets.length === newData.datasets.length) {\n      newData.datasets.forEach(function (dataset, i) {\n        var oldDatasetKeys = Object.keys(oldData.datasets[i]);\n        var newDatasetKeys = Object.keys(dataset);\n        var deletionKeys = oldDatasetKeys.filter(function (key) {\n          return key !== '_meta' && newDatasetKeys.indexOf(key) === -1;\n        });\n        deletionKeys.forEach(function (deletionKey) {\n          delete chart.data.datasets[i][deletionKey];\n        });\n\n        for (var attribute in dataset) {\n          if (dataset.hasOwnProperty(attribute)) {\n            chart.data.datasets[i][attribute] = dataset[attribute];\n          }\n        }\n      });\n\n      if (newData.hasOwnProperty('labels')) {\n        chart.data.labels = newData.labels;\n        this.$emit('labels:update');\n      }\n\n      if (newData.hasOwnProperty('xLabels')) {\n        chart.data.xLabels = newData.xLabels;\n        this.$emit('xlabels:update');\n      }\n\n      if (newData.hasOwnProperty('yLabels')) {\n        chart.data.yLabels = newData.yLabels;\n        this.$emit('ylabels:update');\n      }\n\n      chart.update();\n      this.$emit('chart:update');\n    } else {\n      if (chart) {\n        chart.destroy();\n        this.$emit('chart:destroy');\n      }\n\n      this.renderChart(this.chartData, this.options);\n      this.$emit('chart:render');\n    }\n  } else {\n    if (this.$data._chart) {\n      this.$data._chart.destroy();\n\n      this.$emit('chart:destroy');\n    }\n\n    this.renderChart(this.chartData, this.options);\n    this.$emit('chart:render');\n  }\n}\n\nexport var reactiveData = {\n  data: function data() {\n    return {\n      chartData: null\n    };\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport var reactiveProp = {\n  props: {\n    chartData: {\n      required: true\n    }\n  },\n  watch: {\n    'chartData': dataHandler\n  }\n};\nexport default {\n  reactiveData: reactiveData,\n  reactiveProp: reactiveProp\n};","import Chart from 'chart.js';\nexport function generateChart(chartId, chartType) {\n  return {\n    render: function render(createElement) {\n      return createElement('div', {\n        style: this.styles,\n        class: this.cssClasses\n      }, [createElement('canvas', {\n        attrs: {\n          id: this.chartId,\n          width: this.width,\n          height: this.height\n        },\n        ref: 'canvas'\n      })]);\n    },\n    props: {\n      chartId: {\n        default: chartId,\n        type: String\n      },\n      width: {\n        default: 400,\n        type: Number\n      },\n      height: {\n        default: 400,\n        type: Number\n      },\n      cssClasses: {\n        type: String,\n        default: ''\n      },\n      styles: {\n        type: Object\n      },\n      plugins: {\n        type: Array,\n        default: function _default() {\n          return [];\n        }\n      }\n    },\n    data: function data() {\n      return {\n        _chart: null,\n        _plugins: this.plugins\n      };\n    },\n    methods: {\n      addPlugin: function addPlugin(plugin) {\n        this.$data._plugins.push(plugin);\n      },\n      generateLegend: function generateLegend() {\n        if (this.$data._chart) {\n          return this.$data._chart.generateLegend();\n        }\n      },\n      renderChart: function renderChart(data, options) {\n        if (this.$data._chart) this.$data._chart.destroy();\n        this.$data._chart = new Chart(this.$refs.canvas.getContext('2d'), {\n          type: chartType,\n          data: data,\n          options: options,\n          plugins: this.$data._plugins\n        });\n      }\n    },\n    beforeDestroy: function beforeDestroy() {\n      if (this.$data._chart) {\n        this.$data._chart.destroy();\n      }\n    }\n  };\n}\nexport var Bar = generateChart('bar-chart', 'bar');\nexport var HorizontalBar = generateChart('horizontalbar-chart', 'horizontalBar');\nexport var Doughnut = generateChart('doughnut-chart', 'doughnut');\nexport var Line = generateChart('line-chart', 'line');\nexport var Pie = generateChart('pie-chart', 'pie');\nexport var PolarArea = generateChart('polar-chart', 'polarArea');\nexport var Radar = generateChart('radar-chart', 'radar');\nexport var Bubble = generateChart('bubble-chart', 'bubble');\nexport var Scatter = generateChart('scatter-chart', 'scatter');\nexport default {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter\n};","import mixins from './mixins/index.js';\nimport { Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, generateChart } from './BaseCharts';\nvar VueCharts = {\n  Bar: Bar,\n  HorizontalBar: HorizontalBar,\n  Doughnut: Doughnut,\n  Line: Line,\n  Pie: Pie,\n  PolarArea: PolarArea,\n  Radar: Radar,\n  Bubble: Bubble,\n  Scatter: Scatter,\n  mixins: mixins,\n  generateChart: generateChart,\n  render: function render() {\n    return console.error('[vue-chartjs]: This is not a vue component. It is the whole object containing all vue components. Please import the named export or access the components over the dot notation. For more info visit https://vue-chartjs.org/#/home?id=quick-start');\n  }\n};\nexport default VueCharts;\nexport { VueCharts, Bar, HorizontalBar, Doughnut, Line, Pie, PolarArea, Radar, Bubble, Scatter, mixins, generateChart };","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global['custom-tooltips'] = {})));\n}(this, (function (exports) { 'use strict';\n\n  /**\n   * --------------------------------------------------------------------------\n   * CoreUI Plugins - Custom Tooltips for Chart.js (v1.2.0): custom-tooltips.js\n   * Licensed under MIT (https://coreui.io/license)\n   * --------------------------------------------------------------------------\n   */\n  function CustomTooltips(tooltipModel) {\n    var _this = this;\n\n    // Add unique id if not exist\n    var _setCanvasId = function _setCanvasId() {\n      var _idMaker = function _idMaker() {\n        var _hex = 16;\n        var _multiplier = 0x10000;\n        return ((1 + Math.random()) * _multiplier | 0).toString(_hex);\n      };\n\n      var _canvasId = \"_canvas-\" + (_idMaker() + _idMaker());\n\n      _this._chart.canvas.id = _canvasId;\n      return _canvasId;\n    };\n\n    var ClassName = {\n      ABOVE: 'above',\n      BELOW: 'below',\n      CHARTJS_TOOLTIP: 'chartjs-tooltip',\n      NO_TRANSFORM: 'no-transform',\n      TOOLTIP_BODY: 'tooltip-body',\n      TOOLTIP_BODY_ITEM: 'tooltip-body-item',\n      TOOLTIP_BODY_ITEM_COLOR: 'tooltip-body-item-color',\n      TOOLTIP_BODY_ITEM_LABEL: 'tooltip-body-item-label',\n      TOOLTIP_BODY_ITEM_VALUE: 'tooltip-body-item-value',\n      TOOLTIP_HEADER: 'tooltip-header',\n      TOOLTIP_HEADER_ITEM: 'tooltip-header-item'\n    };\n    var Selector = {\n      DIV: 'div',\n      SPAN: 'span',\n      TOOLTIP: (this._chart.canvas.id || _setCanvasId()) + \"-tooltip\"\n    };\n    var tooltip = document.getElementById(Selector.TOOLTIP);\n\n    if (!tooltip) {\n      tooltip = document.createElement('div');\n      tooltip.id = Selector.TOOLTIP;\n      tooltip.className = ClassName.CHARTJS_TOOLTIP;\n\n      this._chart.canvas.parentNode.appendChild(tooltip);\n    } // Hide if no tooltip\n\n\n    if (tooltipModel.opacity === 0) {\n      tooltip.style.opacity = 0;\n      return;\n    } // Set caret Position\n\n\n    tooltip.classList.remove(ClassName.ABOVE, ClassName.BELOW, ClassName.NO_TRANSFORM);\n\n    if (tooltipModel.yAlign) {\n      tooltip.classList.add(tooltipModel.yAlign);\n    } else {\n      tooltip.classList.add(ClassName.NO_TRANSFORM);\n    } // Set Text\n\n\n    if (tooltipModel.body) {\n      var titleLines = tooltipModel.title || [];\n      var tooltipHeader = document.createElement(Selector.DIV);\n      tooltipHeader.className = ClassName.TOOLTIP_HEADER;\n      titleLines.forEach(function (title) {\n        var tooltipHeaderTitle = document.createElement(Selector.DIV);\n        tooltipHeaderTitle.className = ClassName.TOOLTIP_HEADER_ITEM;\n        tooltipHeaderTitle.innerHTML = title;\n        tooltipHeader.appendChild(tooltipHeaderTitle);\n      });\n      var tooltipBody = document.createElement(Selector.DIV);\n      tooltipBody.className = ClassName.TOOLTIP_BODY;\n      var tooltipBodyItems = tooltipModel.body.map(function (item) {\n        return item.lines;\n      });\n      tooltipBodyItems.forEach(function (item, i) {\n        var tooltipBodyItem = document.createElement(Selector.DIV);\n        tooltipBodyItem.className = ClassName.TOOLTIP_BODY_ITEM;\n        var colors = tooltipModel.labelColors[i];\n        var tooltipBodyItemColor = document.createElement(Selector.SPAN);\n        tooltipBodyItemColor.className = ClassName.TOOLTIP_BODY_ITEM_COLOR;\n        tooltipBodyItemColor.style.backgroundColor = colors.backgroundColor;\n        tooltipBodyItem.appendChild(tooltipBodyItemColor);\n\n        if (item[0].split(':').length > 1) {\n          var tooltipBodyItemLabel = document.createElement(Selector.SPAN);\n          tooltipBodyItemLabel.className = ClassName.TOOLTIP_BODY_ITEM_LABEL;\n          tooltipBodyItemLabel.innerHTML = item[0].split(': ')[0];\n          tooltipBodyItem.appendChild(tooltipBodyItemLabel);\n          var tooltipBodyItemValue = document.createElement(Selector.SPAN);\n          tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          tooltipBodyItemValue.innerHTML = item[0].split(': ').pop();\n          tooltipBodyItem.appendChild(tooltipBodyItemValue);\n        } else {\n          var _tooltipBodyItemValue = document.createElement(Selector.SPAN);\n\n          _tooltipBodyItemValue.className = ClassName.TOOLTIP_BODY_ITEM_VALUE;\n          _tooltipBodyItemValue.innerHTML = item[0];\n          tooltipBodyItem.appendChild(_tooltipBodyItemValue);\n        }\n\n        tooltipBody.appendChild(tooltipBodyItem);\n      });\n      tooltip.innerHTML = '';\n      tooltip.appendChild(tooltipHeader);\n      tooltip.appendChild(tooltipBody);\n    }\n\n    var positionY = this._chart.canvas.offsetTop;\n    var positionX = this._chart.canvas.offsetLeft; // Display, position, and set styles for font\n\n    tooltip.style.opacity = 1;\n    tooltip.style.left = positionX + tooltipModel.caretX + \"px\";\n    tooltip.style.top = positionY + tooltipModel.caretY + \"px\";\n  }\n\n  exports.CustomTooltips = CustomTooltips;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=custom-tooltips.js.map\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-in plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar Animation = require('./core.animation');\nvar animations = require('./core.animations');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\nvar scaleService = require('../core/core.scaleService');\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n"],"sourceRoot":""}